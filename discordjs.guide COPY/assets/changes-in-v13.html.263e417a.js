import{r as e,o as a,c as n,b as s,w as t,a as i,F as d,d as r,f as o}from"./app.554c1b80.js";const c={},l=i("h1",{id:"updating-from-v12-to-v13",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#updating-from-v12-to-v13","aria-hidden":"true"},"#"),r(" Updating from v12 to v13")],-1),h=i("h2",{id:"before-you-start",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#before-you-start","aria-hidden":"true"},"#"),r(" Before you start")],-1),p=i("p",null,[r("v13 requires Node 16.6 or higher to use, so make sure you're up to date. To check your Node version, use "),i("code",null,"node -v"),r(" in your terminal or command prompt, and if it's not high enough, update it! There are many resources online to help you with this step based on your host system.")],-1),u=i("p",null,"Once you've got Node up-to-date, you can install v13 by running the appropriate command in your terminal or command prompt.",-1),m=i("div",{class:"language-bash ext-sh"},[i("pre",{class:"language-bash"},[i("code",null,[i("span",{class:"token function"},"npm"),r(),i("span",{class:"token function"},"install"),r(" discord.js "),i("span",{class:"token comment"},"# text-only"),r("\n"),i("span",{class:"token function"},"npm"),r(),i("span",{class:"token function"},"install"),r(" discord.js @discordjs/voice "),i("span",{class:"token comment"},"# voice support"),r("\n")])])],-1),g=i("div",{class:"language-bash ext-sh"},[i("pre",{class:"language-bash"},[i("code",null,[i("span",{class:"token function"},"yarn"),r(),i("span",{class:"token function"},"add"),r(" discord.js "),i("span",{class:"token comment"},"# text-only"),r("\n"),i("span",{class:"token function"},"yarn"),r(),i("span",{class:"token function"},"add"),r(" discord.js @discordjs/voice "),i("span",{class:"token comment"},"# voice support"),r("\n")])])],-1),b=i("div",{class:"language-bash ext-sh"},[i("pre",{class:"language-bash"},[i("code",null,[i("span",{class:"token function"},"pnpm"),r(),i("span",{class:"token function"},"add"),r(" discord.js "),i("span",{class:"token comment"},"# text-only"),r("\n"),i("span",{class:"token function"},"pnpm"),r(),i("span",{class:"token function"},"add"),r(" discord.js @discordjs/voice "),i("span",{class:"token comment"},"# voice support"),r("\n")])])],-1),f=r("You can check your discord.js version with the "),k=i("code",null,"list",-1),v=r(" command. Should it still show v12.x, uninstall and re-install discord.js and make sure the entry in your package.json does not prevent a major version update. Please refer to the "),x={href:"https://docs.npmjs.com/files/package.json#dependencies",target:"_blank",rel:"noopener noreferrer"},w=r("npm documentation"),y=r(" for this."),M=i("div",{class:"language-bash ext-sh"},[i("pre",{class:"language-bash"},[i("code",null,[i("span",{class:"token comment"},"# check version"),r("\n"),i("span",{class:"token function"},"npm"),r(" list discord.js\n"),i("span",{class:"token comment"},"# uninstall and re-install"),r("\n"),i("span",{class:"token function"},"npm"),r(" uninstall discord.js\n"),i("span",{class:"token function"},"npm"),r(),i("span",{class:"token function"},"install"),r(" discord.js\n")])])],-1),C=i("div",{class:"language-bash ext-sh"},[i("pre",{class:"language-bash"},[i("code",null,[i("span",{class:"token comment"},"# check version"),r("\n"),i("span",{class:"token function"},"yarn"),r(" list discord.js\n"),i("span",{class:"token comment"},"# uninstall and re-install"),r("\n"),i("span",{class:"token function"},"yarn"),r(" remove discord.js\n"),i("span",{class:"token function"},"yarn"),r(),i("span",{class:"token function"},"add"),r(" discord.js\n")])])],-1),T=i("div",{class:"language-bash ext-sh"},[i("pre",{class:"language-bash"},[i("code",null,[i("span",{class:"token comment"},"# check version"),r("\n"),i("span",{class:"token function"},"pnpm"),r(" list discord.js\n"),i("span",{class:"token comment"},"# uninstall and re-install"),r("\n"),i("span",{class:"token function"},"pnpm"),r(" remove discord.js\n"),i("span",{class:"token function"},"pnpm"),r(),i("span",{class:"token function"},"add"),r(" discord.js\n")])])],-1),G=i("h2",{id:"api-version",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#api-version","aria-hidden":"true"},"#"),r(" API version")],-1),I=i("p",null,"discord.js v13 makes the switch to Discord API v9! In addition to this, the new major version also includes a bunch of cool new features.",-1),S=i("h2",{id:"slash-commands",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#slash-commands","aria-hidden":"true"},"#"),r(" Slash commands")],-1),A=r("discord.js now has support for slash commands! Refer to the "),E=r("slash commands"),P=r(" section of this guide to get started."),j=o('<p>In addition to the <code>interactionCreate</code> event covered in the above guide, this release also includes the new Client events <code>applicationCommandCreate</code>, <code>applicationCommandDelete</code>, and <code>applicationCommandUpdate</code>.</p><h2 id="message-components" tabindex="-1"><a class="header-anchor" href="#message-components" aria-hidden="true">#</a> Message components</h2><p>discord.js now has support for message components! This introduces the <code>MessageActionRow</code>, <code>MessageButton</code>, and <code>MessageSelectMenu</code> classes, as well as associated interactions and collectors.</p>',3),R=r("Refer to the "),U=r("message components"),D=r(" section of this guide to get started."),O=o('<h2 id="threads" tabindex="-1"><a class="header-anchor" href="#threads" aria-hidden="true">#</a> Threads</h2><p>discord.js now has support for threads! Threads are a new type of sub-channel that can be used to help separate conversations into a more meaningful flow.</p><p>This introduces the <code>ThreadManager</code> class, which can be found as <code>TextChannel#threads</code>, in addition to <code>ThreadChannel</code>, <code>ThreadMemberManager</code>, and <code>ThreadMember</code>. There are also five new events: <code>threadCreate</code>, <code>threadUpdate</code>, <code>threadDelete</code>, <code>threadListSync</code>, <code>threadMemberUpdate</code>, and <code>threadMembersUpdate</code>.</p>',3),N=r("Refer to the "),_=r("threads"),F=r(" section of this guide to get started."),W=i("h2",{id:"voice",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#voice","aria-hidden":"true"},"#"),r(" Voice")],-1),L=r("Support for voice has been separated into its own module. You now need to install and use "),q={href:"https://github.com/discordjs/voice",target:"_blank",rel:"noopener noreferrer"},V=r("@discordjs/voice"),B=r(" for interacting with the Discord Voice API."),z=r("Refer to the "),H=r("voice"),Y=r(" section of this guide to get started."),K=o('<h2 id="customizable-manager-caches" tabindex="-1"><a class="header-anchor" href="#customizable-manager-caches" aria-hidden="true">#</a> Customizable Manager caches</h2><p>A popular request that has finally been heard - the <code>Client</code> class now has a new option, <code>makeCache</code>. It accepts a <code>CacheFactory</code>.</p><p>By combining this with the helper function <code>Options.cacheWithLimits</code>, users can define limits on each Manager&#39;s cache and let discord.js handle the rest.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Client</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\tmakeCache<span class="token operator">:</span> Options<span class="token punctuation">.</span><span class="token function">cacheWithLimits</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\tMessageManager<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token comment">// This is default</span>\n\t\tPresenceManager<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n\t\t<span class="token comment">// Add more class names here</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Additional flexibility can be gained by providing a function which returns a custom cache implementation. Keep in mind this should still maintain the <code>Collection</code>/<code>Map</code>-like interface for internal compatibility.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Client</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t<span class="token function-variable function">makeCache</span><span class="token operator">:</span> <span class="token parameter">manager</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span>manager<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;MessageManager&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LimitedCollection</span><span class="token punctuation">(</span><span class="token punctuation">{</span> maxSize<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Collection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="commonly-used-methods-that-changed" tabindex="-1"><a class="header-anchor" href="#commonly-used-methods-that-changed" aria-hidden="true">#</a> Commonly used methods that changed</h2><h3 id="sending-messages-embeds-files-etc" tabindex="-1"><a class="header-anchor" href="#sending-messages-embeds-files-etc" aria-hidden="true">#</a> Sending messages, embeds, files, etc.</h3><p>With the introduction of Interactions and it becoming far common for users to want to send an embed with MessageOptions, methods that send messages now enforce a single param. This can be either a string, a <code>MessagePayload</code>, or that method&#39;s variant of <code>MessageOptions</code>.</p><p>Additionally, all messages sent by bots now support up to 10 embeds. As a result, the <code>embed</code> option was removed and replaced with an <code>embeds</code> array, which must be in the options object.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> channel.send(embed);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> channel.send({ embeds: [embed, embed2] });\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> channel.send(&#39;Hello!&#39;, { embed });\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> channel.send({ content: &#39;Hello!&#39;, embeds: [embed, embed2] });\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> interaction.reply(&#39;Hello!&#39;, { ephemeral: true });\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> interaction.reply({ content: &#39;Hello!&#39;, ephemeral: true });\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><code>MessageEmbed#attachFiles</code> has been removed; files should now be attached directly to the message instead of the embed.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> const embed = new Discord.MessageEmbed().setTitle(&#39;Attachments&#39;).attachFiles([&#39;./image1.png&#39;, &#39;./image2.jpg&#39;]);\n</span><span class="token prefix deleted">-</span><span class="token line"> channel.send(embed);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> const embed = new Discord.MessageEmbed().setTitle(&#39;Attachments&#39;);\n</span><span class="token prefix inserted">+</span><span class="token line"> channel.send({ embeds: [embed], files: [&#39;./image1.png&#39;, &#39;./image2.jpg&#39;] });\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>The <code>code</code> and <code>split</code> options have also been removed. This functionality will now have to be handled manually, such as via the <code>Formatters.codeBlock</code> and <code>Util.splitMessage</code> helpers.</p><h3 id="strings" tabindex="-1"><a class="header-anchor" href="#strings" aria-hidden="true">#</a> Strings</h3><p>Many methods in discord.js that were documented as accepting strings would also accept other types and resolve this into a string on your behalf. The results of this behavior were often undesirable, producing output such as <code>[object Object]</code>.</p><p>discord.js now enforces and validates string input on all methods that expect it. Users will need to manually call <code>toString()</code> or utilize template literals for all string inputs as appropriate.</p><p>The most common areas you will encounter this change in are: <code>MessageOptions#content</code>, the properties of a <code>MessageEmbed</code>, and passing objects such as users or roles, expecting them to be stringified.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> message.channel.send(user);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> message.channel.send(user.toString());\n</span></span>\nlet count = 5;\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> embed.addField(&#39;Count&#39;, count);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> embed.addField(&#39;Count&#39;, count.toString());\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="intents" tabindex="-1"><a class="header-anchor" href="#intents" aria-hidden="true">#</a> Intents</h3><p>As v13 makes the switch to Discord API v9, it is now <strong>required</strong> to specify all intents your bot uses in the Client constructor. The <code>intents</code> option has also moved from <code>ClientOptions#ws#intents</code> to <code>ClientOptions#intents</code>.</p><p>The shortcuts <code>Intents.ALL</code>, <code>Intents.NON_PRIVILEGED</code>, and <code>Intents.PRIVILEGED</code> have all been removed to discourage bad practices of enabling unused intents.</p>',22),J=r("Refer to our more "),$=r("detailed article about this topic"),X=r("."),Q=o('<div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> const client = new Client({ ws: { intents: [Intents.FLAGS.GUILDS] } });\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> const client = new Client({ intents: [Intents.FLAGS.GUILDS] });\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="structures-extend" tabindex="-1"><a class="header-anchor" href="#structures-extend" aria-hidden="true">#</a> Structures#extend</h3>',2),Z=r("The concept of extendable Structures has been completely removed from discord.js. For more information on why this decision was made, refer to "),ee={href:"https://github.com/discordjs/discord.js/pull/6027",target:"_blank",rel:"noopener noreferrer"},ae=r("this pull request"),ne=r("."),se=o('<p>There is no swap-in replacement for this, as the intention is to change the code design rather than enable something equally bad.</p><p>For some real-world example of the alternatives provided in the PR, you may have been extending the <code>Guild</code> class with guild-specific settings:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Structures<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token string">&#39;Guild&#39;</span><span class="token punctuation">,</span> <span class="token parameter">Guild</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">return</span> <span class="token keyword">class</span> <span class="token class-name">MyGuild</span> <span class="token keyword">extends</span> <span class="token class-name">Guild</span> <span class="token punctuation">{</span>\n\t\t<span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">client<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token keyword">super</span><span class="token punctuation">(</span>client<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">this</span><span class="token punctuation">.</span>settings <span class="token operator">=</span> <span class="token punctuation">{</span>\n\t\t\t\tprefix<span class="token operator">:</span> <span class="token string">&#39;!&#39;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>This functionality can be replicated using the <code>WeakMap</code> or <code>Collection</code> example, even attaching it to the Client if necessary:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>client<span class="token punctuation">.</span>guildSettings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Collection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nclient<span class="token punctuation">.</span>guildSettings<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>guildId<span class="token punctuation">,</span> <span class="token punctuation">{</span> prefix<span class="token operator">:</span> <span class="token string">&#39;!&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// In practice, you would populate this Collection with data fetched from a database</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> prefix <span class="token punctuation">}</span> <span class="token operator">=</span> message<span class="token punctuation">.</span>client<span class="token punctuation">.</span>guildSettings<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>guild<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="collectors" tabindex="-1"><a class="header-anchor" href="#collectors" aria-hidden="true">#</a> Collectors</h3><p>All Collector related classes and methods (both <code>.create*()</code> and <code>.await*()</code>) now take a single object parameter which also includes the filter.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> const collector = message.createReactionCollector(filter, { time: 15000 });\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> const collector = message.createReactionCollector({ filter, time: 15000 });\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> const reactions = await message.awaitReactions(filter, { time: 15000 });\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> const reactions = await message.awaitReactions({ filter, time: 15000 });\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="naming-conventions" tabindex="-1"><a class="header-anchor" href="#naming-conventions" aria-hidden="true">#</a> Naming conventions</h3><p>Some commonly used naming conventions in discord.js have changed.</p><h4 id="thing-thingid" tabindex="-1"><a class="header-anchor" href="#thing-thingid" aria-hidden="true">#</a> Thing#thingId</h4><p>The casing of <code>thingID</code> properties has changed to <code>thingId</code>. This is a more-correct casing for the camelCase used by discord.js as <code>Id</code> is an abbreviation of Identifier, not an acronym.</p><p>This includes: <code>afkChannelId</code>, <code>applicationId</code>, <code>channelId</code>, <code>creatorId</code>, <code>guildId</code>, <code>lastMessageId</code>, <code>ownerId</code>, <code>parentId</code>, <code>partyId</code>, <code>processId</code>, <code>publicUpdatesChannelId</code>, <code>resolveId</code>, <code>rulesChannelId</code>, <code>sessionId</code>, <code>shardId</code>, <code>systemChannelId</code>, <code>webhookId</code>, <code>widgetChannelId</code>, and <code>workerId</code>.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> console.log(guild.ownerID);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> console.log(guild.ownerId);\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> console.log(interaction.channelID);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> console.log(interaction.channelId);\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="client-message" tabindex="-1"><a class="header-anchor" href="#client-message" aria-hidden="true">#</a> Client#message</h4><p>The <code>message</code> event has been renamed to <code>messageCreate</code>, to bring the library in line with Discord&#39;s naming conventions. Using <code>message</code> will still work, but you&#39;ll receive a deprecation warning until you switch over.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> client.on(&quot;message&quot;, message =&gt; { ... });\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> client.on(&quot;messageCreate&quot;, message =&gt; { ... });\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="allowed-mentions" tabindex="-1"><a class="header-anchor" href="#allowed-mentions" aria-hidden="true">#</a> Allowed Mentions</h3><p><code>clientOptions.disableMentions</code> has been removed and replaced with <code>clientOptions.allowedMentions</code>! The Discord API now allows bots much more granular control over mention parsing, down to the specific id.</p>',19),te=r("Refer to the "),ie={href:"https://discord.com/developers/docs/resources/channel#allowed-mentions-object",target:"_blank",rel:"noopener noreferrer"},de=r("Discord API documentation"),re=r(" for more information."),oe=o('<div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> const client = new Discord.Client({ disableMentions: &#39;everyone&#39; });\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> const client = new Discord.Client({ allowedMentions: { parse: [&#39;users&#39;, &#39;roles&#39;], repliedUser: true } });\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="replies-message-reply" tabindex="-1"><a class="header-anchor" href="#replies-message-reply" aria-hidden="true">#</a> Replies / Message#reply</h3><p><code>Message#reply</code> will no longer result in the bot prepending a user mention to the content, replacing the behavior with Discord&#39;s reply feature.</p><p><code>MessageOptions#reply</code> no longer takes a user id. It has been replaced with a <code>ReplyOptions</code> type, expecting <code>MessageOptions#reply#messageReference</code> as a Message id.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> channel.send(&#39;content&#39;, { reply: &#39;123456789012345678&#39; }); // User id\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> channel.send({ content: &#39;content&#39;, reply: { messageReference: &#39;765432109876543219&#39; }}); // Message id\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>The new <code>MessageOptions.allowedMentions.repliedUser</code> boolean option determines if the reply will notify the author of the original message.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> message.reply(&#39;content&#39;)\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> message.reply({ content: &#39;content&#39;, allowedMentions: { repliedUser: false }})\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Note that this will disable all other mentions in this message. To enable other mentions, you will need to include other <code>allowedMentions</code> fields. See the above &quot;Allowed Mentions&quot; section for more.</p><h3 id="bitfields-permissions" tabindex="-1"><a class="header-anchor" href="#bitfields-permissions" aria-hidden="true">#</a> Bitfields / Permissions</h3>',9),ce=r("Bitfields are now "),le=i("code",null,"BigInt",-1),he=r("s instead of "),pe=i("code",null,"Number",-1),ue=r("s. This can be handled using the "),me=i("code",null,"BigInt()",-1),ge=r(" class, or the n-suffixed "),be={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt",target:"_blank",rel:"noopener noreferrer"},fe=r("BigInt literal"),ke=r("."),ve=o('<div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> const p = new Permissions(104324673);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> const p = new Permissions(BigInt(104324673));\n</span><span class="token prefix inserted">+</span><span class="token line"> const p = new Permissions(104324673n);\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>In addition, the usage of string literals for bitfield flags such as <code>Permissions</code> and <code>UserFlags</code> is discouraged; you should use the flag instead.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> permissions.has(&#39;SEND_MESSAGES&#39;)\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> permissions.has(Permissions.FLAGS.SEND_MESSAGES)\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="dm-channels" tabindex="-1"><a class="header-anchor" href="#dm-channels" aria-hidden="true">#</a> DM Channels</h3><p>On Discord API v8 and later, DM Channels do not emit the <code>CHANNEL_CREATE</code> event, which means discord.js is unable to cache them automatically. In order for your bot to receive DMs, the <code>CHANNEL</code> partial must be enabled.</p><h3 id="webpack" tabindex="-1"><a class="header-anchor" href="#webpack" aria-hidden="true">#</a> Webpack</h3><p>Webpack builds are no longer supported.</p><h2 id="changes-and-deletions" tabindex="-1"><a class="header-anchor" href="#changes-and-deletions" aria-hidden="true">#</a> Changes and deletions</h2><h3 id="activitytype" tabindex="-1"><a class="header-anchor" href="#activitytype" aria-hidden="true">#</a> ActivityType</h3><p>The <code>CUSTOM_STATUS</code> type has been renamed to <code>CUSTOM</code>.</p><h3 id="apimessage" tabindex="-1"><a class="header-anchor" href="#apimessage" aria-hidden="true">#</a> APIMessage</h3><p>The <code>APIMessage</code> class has been renamed to <code>MessagePayload</code>, resolving a naming clash with an interface in the <code>discord-api-types</code> library which represents raw message data objects.</p><h3 id="channel" tabindex="-1"><a class="header-anchor" href="#channel" aria-hidden="true">#</a> Channel</h3><h4 id="channel-type" tabindex="-1"><a class="header-anchor" href="#channel-type" aria-hidden="true">#</a> Channel#type</h4><p>Channel types are now uppercase and align with Discord&#39;s naming conventions.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> if(channel.type === &#39;text&#39;) channel.send(&#39;Content&#39;);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> if(channel.type === &#39;GUILD_TEXT&#39;) channel.send(&#39;Content&#39;);\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="client" tabindex="-1"><a class="header-anchor" href="#client" aria-hidden="true">#</a> Client</h3><h4 id="client-emojis" tabindex="-1"><a class="header-anchor" href="#client-emojis" aria-hidden="true">#</a> Client#emojis</h4><p>The Client Emoji manager is now a <code>BaseGuildEmojiManager</code>, providing cache resolution only and removing methods that would fail to create emojis as there was no Guild context.</p><h4 id="client-fetchapplication" tabindex="-1"><a class="header-anchor" href="#client-fetchapplication" aria-hidden="true">#</a> Client#fetchApplication</h4><p>The <code>Client#fetchApplication</code> method has been removed and replaced with the <code>Client#application</code> property.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> client.fetchApplication().then(application =&gt; console.log(application.name))\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> console.log(client.application.name);\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="client-fetchwidget" tabindex="-1"><a class="header-anchor" href="#client-fetchwidget" aria-hidden="true">#</a> Client#fetchWidget</h4><p>This method has been renamed to <code>fetchGuildWidget</code> to better represent its functionality.</p><h4 id="client-generateinvite" tabindex="-1"><a class="header-anchor" href="#client-generateinvite" aria-hidden="true">#</a> Client#generateInvite</h4><p><code>Client#generateInvite</code> no longer supports <code>PermissionsResolvable</code> as its argument, requiring <code>InviteGenerationOptions</code> instead. This also requires that at least one of either <code>bot</code> or <code>applications.commands</code> is provided in <code>scopes</code> to generate a valid invite URL.</p><p>To generate an invite link with slash commands permissions:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">generateInvite</span><span class="token punctuation">(</span><span class="token punctuation">{</span> scopes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;applications.commands&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>To generate an invite link for a bot and define required permissions:</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> client.generateInvite([Permissions.FLAGS.SEND_MESSAGES]);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> client.generateInvite({ scopes: [&#39;bot&#39;], permissions: [Permissions.FLAGS.SEND_MESSAGES] })\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="client-login" tabindex="-1"><a class="header-anchor" href="#client-login" aria-hidden="true">#</a> Client#login</h4><p>Previously when a token had reached its 1000 login limit for the day, discord.js would treat this as a rate limit and silently wait to login again, but this was not communicated to the user. This will now instead cause an error to be thrown.</p><h4 id="client-typingstart" tabindex="-1"><a class="header-anchor" href="#client-typingstart" aria-hidden="true">#</a> Client#typingStart</h4><p>The <code>Client#typingStart</code> event now only emits a <code>Typing</code> structure. Previously, <code>Channel</code> and <code>User</code> were emitted.</p><h4 id="client-setinterval" tabindex="-1"><a class="header-anchor" href="#client-setinterval" aria-hidden="true">#</a> Client#setInterval</h4><h4 id="client-settimeout" tabindex="-1"><a class="header-anchor" href="#client-settimeout" aria-hidden="true">#</a> Client#setTimeout</h4><p>The Client timeout methods have all been removed. These methods existed for the purpose of caching timeouts internally so they could be cleared when the Client is destroyed. Since timers now have an <code>unref</code> method in Node, this is no longer required.</p><h3 id="clientoptions" tabindex="-1"><a class="header-anchor" href="#clientoptions" aria-hidden="true">#</a> ClientOptions</h3><h4 id="clientoptions-fetchallmembers" tabindex="-1"><a class="header-anchor" href="#clientoptions-fetchallmembers" aria-hidden="true">#</a> ClientOptions#fetchAllMembers</h4><p>The <code>ClientOptions#fetchAllMembers</code> option has been removed.</p><p>With the introduction of gateway intents, the <code>fetchAllMembers</code> Client option would often fail and causes significant delays in ready states or even cause timeout errors. As its purpose is contradictory to Discord&#39;s intentions to reduce scraping of user and presence data, it has been removed.</p><h4 id="clientoptions-messagecachemaxsize" tabindex="-1"><a class="header-anchor" href="#clientoptions-messagecachemaxsize" aria-hidden="true">#</a> ClientOptions#messageCacheMaxSize</h4><p>The <code>ClientOptions#messageCacheMaxSize</code> option has been removed. Instead, use <a href="#customizable-manager-caches"><code>ClientOptions#makeCache</code></a> to customize the <code>MessageManager</code> cache.</p><h4 id="clientoptions-messageedithistorymaxsize" tabindex="-1"><a class="header-anchor" href="#clientoptions-messageedithistorymaxsize" aria-hidden="true">#</a> ClientOptions#messageEditHistoryMaxSize</h4><p>The <code>ClientOptions#messageEditHistoryMaxSize</code> option has been removed.</p><p>To reduce caching, discord.js will no longer store an edit history. You will need to implement this yourself if required.</p><h3 id="clientuser" tabindex="-1"><a class="header-anchor" href="#clientuser" aria-hidden="true">#</a> ClientUser</h3><h4 id="clientuser-setactivity" tabindex="-1"><a class="header-anchor" href="#clientuser-setactivity" aria-hidden="true">#</a> ClientUser#setActivity</h4><p>The <code>ClientUser#setActivity</code> method no longer returns a Promise.</p><h4 id="clientuser-setafk" tabindex="-1"><a class="header-anchor" href="#clientuser-setafk" aria-hidden="true">#</a> ClientUser#setAFK</h4><p>The <code>ClientUser#setAFK</code> method no longer returns a Promise.</p><h4 id="clientuser-setpresence" tabindex="-1"><a class="header-anchor" href="#clientuser-setpresence" aria-hidden="true">#</a> ClientUser#setPresence</h4><p>The <code>ClientUser#setPresence</code> method no longer returns a Promise.</p><p><code>PresenceData#activity</code> was replaced with <code>PresenceData#activities</code>, which now requires an <code>Array&lt;ActivitiesOptions&gt;</code>.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> client.user.setPresence({ activity: { name: &#39;with discord.js&#39; } });\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> client.user.setPresence({ activities: [{ name: &#39;with discord.js&#39; }] });\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="clientuser-setstatus" tabindex="-1"><a class="header-anchor" href="#clientuser-setstatus" aria-hidden="true">#</a> ClientUser#setStatus</h4><p>The <code>ClientUser#setStatus</code> method no longer returns a Promise.</p><h3 id="collection" tabindex="-1"><a class="header-anchor" href="#collection" aria-hidden="true">#</a> Collection</h3><h4 id="collection-array" tabindex="-1"><a class="header-anchor" href="#collection-array" aria-hidden="true">#</a> Collection#array()</h4><h4 id="collection-keyarray" tabindex="-1"><a class="header-anchor" href="#collection-keyarray" aria-hidden="true">#</a> Collection#keyArray()</h4><p>These methods existed to provide access to a cached array of Collection values and keys respectively, which other Collection methods relied on internally. Those other methods have been refactored to no longer rely on cache, so those arrays and these methods have been removed.</p><p>You should instead construct an array by spreading the iterators returned by the base Map class methods:</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> collection.array();\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> [...collection.values()];\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> collection.keyArray();\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> [...collection.keys()];\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="colorresolvable" tabindex="-1"><a class="header-anchor" href="#colorresolvable" aria-hidden="true">#</a> ColorResolvable</h3><p>Colors have been updated to align with the new Discord branding.</p><h3 id="guild" tabindex="-1"><a class="header-anchor" href="#guild" aria-hidden="true">#</a> Guild</h3><h4 id="guild-addmember" tabindex="-1"><a class="header-anchor" href="#guild-addmember" aria-hidden="true">#</a> Guild#addMember</h4><p>This method has been removed, with functionality replaced by the new <code>GuildMemberManager#add</code>.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> guild.addMember(user, { accessToken: token });\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> guild.members.add(user, { accessToken: token });\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="guild-fetchban" tabindex="-1"><a class="header-anchor" href="#guild-fetchban" aria-hidden="true">#</a> Guild#fetchBan</h4><h4 id="guild-fetchbans" tabindex="-1"><a class="header-anchor" href="#guild-fetchbans" aria-hidden="true">#</a> Guild#fetchBans</h4><p>These methods have been removed, with functionality replaced by the new <code>GuildBanManager</code>.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> guild.fetchBan(user);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> guild.bans.fetch(user);\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> guild.fetchBans();\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> guild.bans.fetch();\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="guild-fetchinvites" tabindex="-1"><a class="header-anchor" href="#guild-fetchinvites" aria-hidden="true">#</a> Guild#fetchInvites</h4><p>This method has been removed, with functionality replaced by the new <code>GuildInviteManager</code>.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> guild.fetchInvites();\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> guild.invites.fetch();\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="guild-fetchvanitycode" tabindex="-1"><a class="header-anchor" href="#guild-fetchvanitycode" aria-hidden="true">#</a> Guild#fetchVanityCode</h4><p>The <code>Guild#fetchVanityCode</code> method has been removed.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> Guild.fetchVanityCode().then(code =&gt; console.log(`Vanity URL: https://discord.gg/${code}`));\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> Guild.fetchVanityData().then(res =&gt; console.log(`Vanity URL: https://discord.gg/${res.code} with ${res.uses} uses`));\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="guild-fetchwidget" tabindex="-1"><a class="header-anchor" href="#guild-fetchwidget" aria-hidden="true">#</a> Guild#fetchWidget</h4><p>The <code>Guild#fetchWidget()</code> method now retrieves the widget data for the guild instead of the widget settings. See <code>Client#fetchGuildWidget()</code>. The original functionality has moved to the new method <code>Guild#fetchWidgetSettings()</code>.</p><h4 id="guild-member" tabindex="-1"><a class="header-anchor" href="#guild-member" aria-hidden="true">#</a> Guild#member</h4><p>The <code>Guild#member()</code> helper/shortcut method has been removed.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> guild.member(user);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> guild.members.cache.get(user.id)\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="guild-mfalevel" tabindex="-1"><a class="header-anchor" href="#guild-mfalevel" aria-hidden="true">#</a> Guild#mfaLevel</h3><p>The <code>Guild#mfaLevel</code> property is now an enum.</p><h3 id="guild-nsfw" tabindex="-1"><a class="header-anchor" href="#guild-nsfw" aria-hidden="true">#</a> Guild#nsfw</h3><p>The <code>Guild#nsfw</code> property has been removed, replaced by <code>Guild#nsfwLevel</code>.</p><h4 id="guild-owner" tabindex="-1"><a class="header-anchor" href="#guild-owner" aria-hidden="true">#</a> Guild#owner</h4><p>The <code>Guild#owner</code> property has been removed as it was unreliable due to caching, replaced with <code>Guild#fetchOwner</code>.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> console.log(guild.owner);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> guild.fetchOwner().then(console.log);\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="guild-setwidget" tabindex="-1"><a class="header-anchor" href="#guild-setwidget" aria-hidden="true">#</a> Guild#setWidget</h4><p>The <code>Guild#setWidget()</code> method has been renamed to <code>Guild#setWidgetSettings()</code>.</p><h4 id="guild-voice" tabindex="-1"><a class="header-anchor" href="#guild-voice" aria-hidden="true">#</a> Guild#voice</h4><p>The <code>Guild#voice</code> getter has been removed.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> guild.voice\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> guild.me.voice\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="guildchannel" tabindex="-1"><a class="header-anchor" href="#guildchannel" aria-hidden="true">#</a> GuildChannel</h3><h4 id="guildchannel-createoverwrite" tabindex="-1"><a class="header-anchor" href="#guildchannel-createoverwrite" aria-hidden="true">#</a> GuildChannel#createOverwrite</h4><p>This method has been removed, with functionality replaced by the new <code>PermissionOverwriteManager</code>.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> channel.createOverwrite(user, { VIEW_CHANNEL: false });\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> channel.permissionOverwrites.create(user, { VIEW_CHANNEL: false });\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="guildchannel-createinvite" tabindex="-1"><a class="header-anchor" href="#guildchannel-createinvite" aria-hidden="true">#</a> GuildChannel#createInvite</h4><h4 id="guildchannel-fetchinvites" tabindex="-1"><a class="header-anchor" href="#guildchannel-fetchinvites" aria-hidden="true">#</a> GuildChannel#fetchInvites</h4><p>These methods have been removed from <code>GuildChannel</code> and placed only on subclasses for which invites can be created. These are <code>TextChannel</code>, <code>NewsChannel</code>, <code>VoiceChannel</code>, <code>StageChannel</code>, and <code>StoreChannel</code>.</p><p>On these subclasses, the method now supports additional options:</p><ul><li><code>targetUser</code> to target the invite to join a particular streaming user</li><li><code>targetApplication</code> to target the invite to a particular Discord activity</li><li><code>targetType</code> defines the type of the target for this invite; user or application</li></ul><h4 id="guildchannel-overwritepermissions" tabindex="-1"><a class="header-anchor" href="#guildchannel-overwritepermissions" aria-hidden="true">#</a> GuildChannel#overwritePermissions</h4><p>This method has been removed, with functionality replaced by the new <code>PermissionOverwriteManager</code>.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> channel.overwritePermissions([{ id: user.id , allow: [&#39;VIEW_CHANNEL&#39;], deny: [&#39;SEND_MESSAGES&#39;] }]);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> channel.permissionOverwrites.set([{ id: user.id , allow: [&#39;VIEW_CHANNEL&#39;], deny: [&#39;SEND_MESSAGES&#39;] }]);\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="guildchannel-permissionoverwrites" tabindex="-1"><a class="header-anchor" href="#guildchannel-permissionoverwrites" aria-hidden="true">#</a> GuildChannel#permissionOverwrites</h4><p>This method no longer returns a Collection of PermissionOverwrites, instead providing access to the <code>PermissionOverwriteManager</code>.</p><h4 id="guildchannel-settopic" tabindex="-1"><a class="header-anchor" href="#guildchannel-settopic" aria-hidden="true">#</a> GuildChannel#setTopic</h4><p>The <code>GuildChannel#setTopic</code> method has been removed and placed only on subclasses for which topics can be set. These are <code>TextChannel</code>, <code>NewsChannel</code>, and <code>StageChannel</code>.</p><h4 id="guildchannel-updateoverwrite" tabindex="-1"><a class="header-anchor" href="#guildchannel-updateoverwrite" aria-hidden="true">#</a> GuildChannel#updateOverwrite</h4><p>This method has been removed, with functionality replaced by the new <code>PermissionOverwriteManager</code>.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> channel.updateOverwrite(user, { VIEW_CHANNEL: false });\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> channel.permissionOverwrites.edit(user, { VIEW_CHANNEL: false });\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="guildmember" tabindex="-1"><a class="header-anchor" href="#guildmember" aria-hidden="true">#</a> GuildMember</h3><h4 id="guildmember-ban" tabindex="-1"><a class="header-anchor" href="#guildmember-ban" aria-hidden="true">#</a> GuildMember#ban</h4><p><code>GuildMember#ban()</code> will throw a TypeError when a string is provided instead of an options object.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> member.ban(&#39;reason&#39;)\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> member.ban({ reason: &#39;reason&#39; })\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="guildmember-haspermission" tabindex="-1"><a class="header-anchor" href="#guildmember-haspermission" aria-hidden="true">#</a> GuildMember#hasPermission</h4><p>The <code>GuildMember#hasPermission</code> shortcut/helper method has been removed.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> member.hasPermission(Permissions.FLAGS.SEND_MESSAGES);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> member.permissions.has(Permissions.FLAGS.SEND_MESSAGES);\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="guildmember-lastmessage" tabindex="-1"><a class="header-anchor" href="#guildmember-lastmessage" aria-hidden="true">#</a> GuildMember#lastMessage</h4><h4 id="guildmember-lastmessageid" tabindex="-1"><a class="header-anchor" href="#guildmember-lastmessageid" aria-hidden="true">#</a> GuildMember#lastMessageId</h4><h4 id="guildmember-lastmessagechannelid" tabindex="-1"><a class="header-anchor" href="#guildmember-lastmessagechannelid" aria-hidden="true">#</a> GuildMember#lastMessageChannelId</h4><p>None of these properties were actually provided by Discord, instead relying on potentially inaccurate client cache, and have been removed.</p><h4 id="guildmember-presence" tabindex="-1"><a class="header-anchor" href="#guildmember-presence" aria-hidden="true">#</a> GuildMember#presence</h4><p>The <code>GuildMember#presence</code> property can now be null, rather than a generic offline presence, such as when the <code>GUILD_PRESENCES</code> intent is not enabled.</p><h3 id="guildmembermanager" tabindex="-1"><a class="header-anchor" href="#guildmembermanager" aria-hidden="true">#</a> GuildMemberManager</h3><h4 id="guildmembermanager-ban" tabindex="-1"><a class="header-anchor" href="#guildmembermanager-ban" aria-hidden="true">#</a> GuildMemberManager#ban</h4><p>The <code>GuildMemberManager#ban</code> method will throw a TypeError when a string is provided instead of an options object.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> guild.members.ban(&#39;123456789012345678&#39;, &#39;reason&#39;)\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> guild.members.ban(&#39;123456789012345678&#39;, { reason: &#39;reason&#39; })\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="message-messagemanager" tabindex="-1"><a class="header-anchor" href="#message-messagemanager" aria-hidden="true">#</a> Message / MessageManager</h3><h4 id="message-delete" tabindex="-1"><a class="header-anchor" href="#message-delete" aria-hidden="true">#</a> Message#delete</h4><p>The <code>Message.delete()</code> method no longer accepts any options, requiring a timed-delete to be performed manually.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> message.delete({ timeout: 10000 });\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> setTimeout(() =&gt; message.delete(), 10000);\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>reason</code> is no longer a parameter as it is not used by the API.</p><h4 id="messagemanager-delete" tabindex="-1"><a class="header-anchor" href="#messagemanager-delete" aria-hidden="true">#</a> MessageManager#delete</h4><p>The <code>MessageManager.delete()</code> method no longer accepts any additional options, requiring a timed-delete to be performed manually.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> channel.messages.delete(&#39;123456789012345678&#39;, { timeout: 10000 });\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> setTimeout(() =&gt; channel.messages.delete(&#39;123456789012345678&#39;), 10000);\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>reason</code> is no longer a parameter as it is not used by the API.</p><h4 id="message-edits" tabindex="-1"><a class="header-anchor" href="#message-edits" aria-hidden="true">#</a> Message#edits</h4><p>The <code>Message#edits</code> property has been removed.</p><h3 id="messageembed" tabindex="-1"><a class="header-anchor" href="#messageembed" aria-hidden="true">#</a> MessageEmbed</h3><h4 id="messageembed-attachfiles" tabindex="-1"><a class="header-anchor" href="#messageembed-attachfiles" aria-hidden="true">#</a> MessageEmbed#attachFiles</h4><p>The <code>MessageEmbed#attachFiles</code> method has been removed. Instead, files should be attached to the Message directly via <code>MessageOptions</code>.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> channel.send({ embeds: [new MessageEmbed().setTitle(&quot;Files&quot;).attachFiles(file)] })\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> channel.send({ embeds: [new MessageEmbed().setTitle(&quot;Files&quot;)], files: [file] })\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="permissions" tabindex="-1"><a class="header-anchor" href="#permissions" aria-hidden="true">#</a> Permissions</h3><h4 id="permissions-flags-manage-emojis" tabindex="-1"><a class="header-anchor" href="#permissions-flags-manage-emojis" aria-hidden="true">#</a> Permissions#FLAGS.MANAGE_EMOJIS</h4><p><code>Permissions.FLAGS.MANAGE_EMOJIS</code> is now <code>Permissions.FLAGS.MANAGE_EMOJIS_AND_STICKERS</code>.</p><h3 id="reactionusermanager" tabindex="-1"><a class="header-anchor" href="#reactionusermanager" aria-hidden="true">#</a> ReactionUserManager</h3><h4 id="reactionusermanager-fetch" tabindex="-1"><a class="header-anchor" href="#reactionusermanager-fetch" aria-hidden="true">#</a> ReactionUserManager#fetch</h4><p>The <code>before</code> option has been removed as it was not supported by the API.</p><h3 id="rolemanager" tabindex="-1"><a class="header-anchor" href="#rolemanager" aria-hidden="true">#</a> RoleManager</h3><h4 id="rolemanager-create" tabindex="-1"><a class="header-anchor" href="#rolemanager-create" aria-hidden="true">#</a> RoleManager#create</h4><p>The options passed to <code>RoleManager#create</code> no longer need to be nested in a <code>data</code> object. Additionally, <code>reason</code> is now part of the options, not a second parameter.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> guild.roles.create({ data: { name: &quot;New role&quot; } }, &quot;Creating new role&quot;);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> guild.roles.create({ name: &quot;New role&quot;, reason: &quot;Creating new role&quot; })\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="rolemanager-fetch" tabindex="-1"><a class="header-anchor" href="#rolemanager-fetch" aria-hidden="true">#</a> RoleManager#fetch</h4><p>The <code>RoleManager#fetch()</code> method will now return a Collection instead of a RoleManager when called without params.</p><h3 id="shard" tabindex="-1"><a class="header-anchor" href="#shard" aria-hidden="true">#</a> Shard</h3><h4 id="shard-respawn" tabindex="-1"><a class="header-anchor" href="#shard-respawn" aria-hidden="true">#</a> Shard#respawn</h4><p>The options for the <code>Shard#respawn</code> method are now an object instead of separate params. In addition, the <code>spawnTimeout</code> param has been renamed to <code>timeout</code>. This means the user no longer needs to pass defaults to fill each positional param.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> shard.respawn(500, 30000);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> shard.respawn({ delay: 500, timeout: 30000 });\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="shard-spawn" tabindex="-1"><a class="header-anchor" href="#shard-spawn" aria-hidden="true">#</a> Shard#spawn</h4><p>The <code>spawnTimeout</code> param has been renamed to <code>timeout</code>.</p><h3 id="shardclientutil" tabindex="-1"><a class="header-anchor" href="#shardclientutil" aria-hidden="true">#</a> ShardClientUtil</h3><h4 id="shardclientutil-broadcasteval" tabindex="-1"><a class="header-anchor" href="#shardclientutil-broadcasteval" aria-hidden="true">#</a> ShardClientUtil#broadcastEval</h4><p>The <code>ShardClientUtil#broadcastEval</code> method no longer accepts a string, instead expecting a function.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> client.shard.broadcastEval(&#39;this.guilds.cache.size&#39;)\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> client.shard.broadcastEval(client =&gt; client.guilds.cache.size)\n</span></span>\t\t.then(results =&gt; console.log(`${results.reduce((prev, val) =&gt; prev + val, 0)} total guilds`))\n\t\t.catch(console.error);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="shardclientutil-respawnall" tabindex="-1"><a class="header-anchor" href="#shardclientutil-respawnall" aria-hidden="true">#</a> ShardClientUtil#respawnAll</h4><p>The options for the <code>ShardClientUtil#respawnAll</code> method are now an object instead of separate params. In addition, the <code>spawnTimeout</code> param has been renamed to <code>timeout</code>. This means the user no longer needs to pass defaults to fill each positional param.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> client.shard.respawnAll(5000, 500, 30000);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> client.shard.respawnAll({ shardDelay: 5000, respawnDelay: 500, timeout: 30000 });\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="shardingmanager" tabindex="-1"><a class="header-anchor" href="#shardingmanager" aria-hidden="true">#</a> ShardingManager</h3><h4 id="shardingmanager-broadcasteval" tabindex="-1"><a class="header-anchor" href="#shardingmanager-broadcasteval" aria-hidden="true">#</a> ShardingManager#broadcastEval</h4><p>The <code>ShardingManager#broadcastEval</code> method no longer accepts a string, instead expecting a function. See <code>ShardClientUtil#broadcastEval</code>.</p><h4 id="shardingmanager-spawn" tabindex="-1"><a class="header-anchor" href="#shardingmanager-spawn" aria-hidden="true">#</a> ShardingManager#spawn</h4><p>The options for the <code>ShardingManager#spawn</code> method are now an object instead of separate params. In addition, the <code>spawnTimeout</code> param has been renamed to <code>timeout</code>. This means the user no longer needs to pass defaults to fill each positional param.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> manager.spawn(&#39;auto&#39;, 5500, 30000);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> manager.spawn({ amount: &#39;auto&#39;, delay: 5500, timeout: 30000 });\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="shardingmanager-respawnall" tabindex="-1"><a class="header-anchor" href="#shardingmanager-respawnall" aria-hidden="true">#</a> ShardingManager#respawnAll</h4><p>The options for the <code>ShardingManager#respawnAll</code> method are now an object instead of separate params. In addition, the <code>spawnTimeout</code> param has been renamed to <code>timeout</code>. This means the user no longer needs to pass defaults to fill each positional param.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> manager.respawnAll(5000, 500, 30000);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> manager.respawnAll({ shardDelay: 5000, respawnDelay: 500, timeout: 30000 });\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="textchannel" tabindex="-1"><a class="header-anchor" href="#textchannel" aria-hidden="true">#</a> TextChannel</h3><h4 id="textchannel-starttyping" tabindex="-1"><a class="header-anchor" href="#textchannel-starttyping" aria-hidden="true">#</a> TextChannel#startTyping</h4><h4 id="textchannel-stoptyping" tabindex="-1"><a class="header-anchor" href="#textchannel-stoptyping" aria-hidden="true">#</a> TextChannel#stopTyping</h4><p>These methods have both been replaced by a singular <code>TextChannel.sendTyping()</code>. This method automatically stops typing after 10 seconds, or when a message is sent.</p><h3 id="user" tabindex="-1"><a class="header-anchor" href="#user" aria-hidden="true">#</a> User</h3><h4 id="user-lastmessage" tabindex="-1"><a class="header-anchor" href="#user-lastmessage" aria-hidden="true">#</a> User#lastMessage</h4><h4 id="user-lastmessageid" tabindex="-1"><a class="header-anchor" href="#user-lastmessageid" aria-hidden="true">#</a> User#lastMessageId</h4><p>Neither of these properties were actually provided by Discord, instead relying on potentially inaccurate client cache, and have been removed.</p><h4 id="user-locale" tabindex="-1"><a class="header-anchor" href="#user-locale" aria-hidden="true">#</a> User#locale</h4><p>The <code>User.locale</code> property has been removed, as this property is not exposed to bots.</p><h4 id="user-presence" tabindex="-1"><a class="header-anchor" href="#user-presence" aria-hidden="true">#</a> User#presence</h4><p>The <code>User.presence</code> property has been removed. Presences are now only found on <code>GuildMember</code>.</p><h4 id="user-typingin" tabindex="-1"><a class="header-anchor" href="#user-typingin" aria-hidden="true">#</a> User#typingIn</h4><p>As discord.js no longer caches typing event data, the <code>User.typingIn()</code> method has been removed.</p><h4 id="user-typingsincein" tabindex="-1"><a class="header-anchor" href="#user-typingsincein" aria-hidden="true">#</a> User#typingSinceIn</h4><p>As discord.js no longer caches typing event data, the <code>User.typingSinceIn()</code> method has been removed.</p><h4 id="user-typingdurationin" tabindex="-1"><a class="header-anchor" href="#user-typingdurationin" aria-hidden="true">#</a> User#typingDurationIn</h4><p>As discord.js no longer caches typing event data, the <code>User.typingDurationIn()</code> method has been removed.</p><h3 id="userflags" tabindex="-1"><a class="header-anchor" href="#userflags" aria-hidden="true">#</a> UserFlags</h3><p>The deprecated UserFlags <code>DISCORD_PARTNER</code> and <code>VERIFIED_DEVELOPER</code> / <code>EARLY_VERIFIED_DEVELOPER</code> have been removed in favor of their renamed versions.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> user.flags.has(UserFlags.FLAGS.DISCORD_PARTNER)\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> user.flags.has(UserFlags.FLAGS.PARTNERED_SERVER_OWNER)\n</span></span>\n<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> user.flags.has(UserFlags.FLAGS.VERIFIED_DEVELOPER)\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> user.flags.has(UserFlags.FLAGS.EARLY_VERIFIED_BOT_DEVELOPER)\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>The new flag <code>DISCORD_CERTIFIED_MODERATOR</code> has been added.</p><h3 id="util" tabindex="-1"><a class="header-anchor" href="#util" aria-hidden="true">#</a> Util</h3><p>Shortcuts to Util methods which were previously exported at the top level have been removed.</p><h4 id="util-converttobuffer" tabindex="-1"><a class="header-anchor" href="#util-converttobuffer" aria-hidden="true">#</a> Util#convertToBuffer</h4><h4 id="util-str2ab" tabindex="-1"><a class="header-anchor" href="#util-str2ab" aria-hidden="true">#</a> Util#str2ab</h4><p>Both were removed in favor of Node&#39;s built-in Buffer methods.</p><h4 id="util-fetchrecommendedshards" tabindex="-1"><a class="header-anchor" href="#util-fetchrecommendedshards" aria-hidden="true">#</a> Util#fetchRecommendedShards</h4><p>The <code>Util#fetchRecommendedShards()</code> method now supports an additional option <code>multipleOf</code> to calculate the number to round up to, e.g. a multiple of 16 for large bot sharding.</p><h4 id="util-resolvestring" tabindex="-1"><a class="header-anchor" href="#util-resolvestring" aria-hidden="true">#</a> Util#resolveString</h4><p>The <code>Util#resolveString</code> method has been removed. discord.js now enforces that users provide strings where expected rather than resolving one on their behalf.</p><h3 id="voicestate" tabindex="-1"><a class="header-anchor" href="#voicestate" aria-hidden="true">#</a> VoiceState</h3><h4 id="voicestate-kick" tabindex="-1"><a class="header-anchor" href="#voicestate-kick" aria-hidden="true">#</a> VoiceState#kick</h4><p>The <code>VoiceState#kick</code> method has been renamed to <code>VoiceState#disconnect</code>.</p><h3 id="webhookclient" tabindex="-1"><a class="header-anchor" href="#webhookclient" aria-hidden="true">#</a> WebhookClient</h3><p>The <code>WebhookClient</code> constructor no longer accepts <code>id, token</code> as the first two parameters, instead taking a <code>data</code> object. This object supports an additional option <code>url</code>, allowing creation of a <code>WebhookClient</code> from a webhook URL.</p><div class="language-diff ext-diff line-numbers-mode"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> new WebhookClient(id, token, options);\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> new WebhookClient({ id, token }, options);\n</span></span>\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> new WebhookClient({ url }, options);\n</span></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="additions" tabindex="-1"><a class="header-anchor" href="#additions" aria-hidden="true">#</a> Additions</h2><h3 id="activitytypes" tabindex="-1"><a class="header-anchor" href="#activitytypes" aria-hidden="true">#</a> ActivityTypes</h3><p>A new activity type <code>COMPETING</code> has been added.</p><h3 id="applicationcommand" tabindex="-1"><a class="header-anchor" href="#applicationcommand" aria-hidden="true">#</a> ApplicationCommand</h3><p>Provides API support for slash commands.</p><h3 id="applicationcommandmanager" tabindex="-1"><a class="header-anchor" href="#applicationcommandmanager" aria-hidden="true">#</a> ApplicationCommandManager</h3><p>Provides API support for creating, editing and deleting slash commands.</p><h3 id="applicationcommandpermissionsmanager" tabindex="-1"><a class="header-anchor" href="#applicationcommandpermissionsmanager" aria-hidden="true">#</a> ApplicationCommandPermissionsManager</h3><p>Provides API support for creating, editing, and deleting permission overwrites on slash commands.</p><h3 id="applicationflags" tabindex="-1"><a class="header-anchor" href="#applicationflags" aria-hidden="true">#</a> ApplicationFlags</h3><p>Provides an enumerated bitfield for <code>ClientApplication</code> flags.</p><h3 id="baseguild" tabindex="-1"><a class="header-anchor" href="#baseguild" aria-hidden="true">#</a> BaseGuild</h3><p>The new <code>BaseGuild</code> class is extended by both <code>Guild</code> and <code>OAuth2Guild</code>.</p><h3 id="baseguildtextchannel" tabindex="-1"><a class="header-anchor" href="#baseguildtextchannel" aria-hidden="true">#</a> BaseGuildTextChannel</h3><p>The new <code>BaseGuildTextChannel</code> class is extended by both <code>TextChannel</code> and <code>NewsChannel</code>.</p><h3 id="baseguildvoicechannel" tabindex="-1"><a class="header-anchor" href="#baseguildvoicechannel" aria-hidden="true">#</a> BaseGuildVoiceChannel</h3><p>The new <code>BaseGuildVoiceChannel</code> class is extended by both <code>VoiceChannel</code> and <code>StageChannel</code>.</p><h3 id="buttoninteraction" tabindex="-1"><a class="header-anchor" href="#buttoninteraction" aria-hidden="true">#</a> ButtonInteraction</h3><p>Provides gateway support for a <code>MessageComponentInteraction</code> coming from a button component.</p><h3 id="channel-1" tabindex="-1"><a class="header-anchor" href="#channel-1" aria-hidden="true">#</a> Channel</h3><h4 id="channel-istext" tabindex="-1"><a class="header-anchor" href="#channel-istext" aria-hidden="true">#</a> Channel#isText()</h4><p>Checks and typeguards if a channel is Text-Based; one of <code>TextChannel</code>, <code>DMChannel</code>, <code>NewsChannel</code> or <code>ThreadChannel</code>.</p><h4 id="channel-isthread" tabindex="-1"><a class="header-anchor" href="#channel-isthread" aria-hidden="true">#</a> Channel#isThread()</h4><p>Checks and typeguards if a channel is a <code>ThreadChannel</code>.</p><h4 id="channel-isvoice" tabindex="-1"><a class="header-anchor" href="#channel-isvoice" aria-hidden="true">#</a> Channel#isVoice()</h4><p>Checks and typeguards if a channel is Voice-Based; <code>VoiceChannel</code> or <code>StageChannel</code>.</p><h3 id="client-1" tabindex="-1"><a class="header-anchor" href="#client-1" aria-hidden="true">#</a> Client</h3><h4 id="client-applicationcommandcreate" tabindex="-1"><a class="header-anchor" href="#client-applicationcommandcreate" aria-hidden="true">#</a> Client#applicationCommandCreate</h4><p>Emitted when a guild application command is created.</p><h4 id="client-applicationcommanddelete" tabindex="-1"><a class="header-anchor" href="#client-applicationcommanddelete" aria-hidden="true">#</a> Client#applicationCommandDelete</h4><p>Emitted when a guild application command is deleted.</p><h4 id="client-applicationcommandupdate" tabindex="-1"><a class="header-anchor" href="#client-applicationcommandupdate" aria-hidden="true">#</a> Client#applicationCommandUpdate</h4><p>Emitted when a guild application command is updated.</p><h4 id="client-interactioncreate" tabindex="-1"><a class="header-anchor" href="#client-interactioncreate" aria-hidden="true">#</a> Client#interactionCreate</h4><p>Emitted when an interaction is created.</p><h4 id="client-stageinstancecreate" tabindex="-1"><a class="header-anchor" href="#client-stageinstancecreate" aria-hidden="true">#</a> Client#stageInstanceCreate</h4><p>Emitted when a stage instance is created.</p><h4 id="client-stageinstancedelete" tabindex="-1"><a class="header-anchor" href="#client-stageinstancedelete" aria-hidden="true">#</a> Client#stageInstanceDelete</h4><p>Emitted when a stage instance is deleted.</p><h4 id="client-stageinstanceupdate" tabindex="-1"><a class="header-anchor" href="#client-stageinstanceupdate" aria-hidden="true">#</a> Client#stageInstanceUpdate</h4><p>Emitted when a stage instance gets updated, e.g. change in topic or privacy level.</p><h4 id="client-stickercreate" tabindex="-1"><a class="header-anchor" href="#client-stickercreate" aria-hidden="true">#</a> Client#stickerCreate</h4><p>Emitted when a custom sticker is created in a guild.</p><h4 id="client-stickerdelete" tabindex="-1"><a class="header-anchor" href="#client-stickerdelete" aria-hidden="true">#</a> Client#stickerDelete</h4><p>Emitted when a custom sticker is deleted in a guild.</p><h4 id="client-stickerupdate" tabindex="-1"><a class="header-anchor" href="#client-stickerupdate" aria-hidden="true">#</a> Client#stickerUpdate</h4><p>Emitted when a custom sticker is updated in a guild.</p><h4 id="client-threadcreate" tabindex="-1"><a class="header-anchor" href="#client-threadcreate" aria-hidden="true">#</a> Client#threadCreate</h4><p>Emitted when a thread is created or when the client user is added to a thread.</p><h4 id="client-threaddelete" tabindex="-1"><a class="header-anchor" href="#client-threaddelete" aria-hidden="true">#</a> Client#threadDelete</h4><p>Emitted when a thread is deleted.</p><h4 id="client-threadlistsync" tabindex="-1"><a class="header-anchor" href="#client-threadlistsync" aria-hidden="true">#</a> Client#threadListSync</h4><p>Emitted when the client user gains access to a text or news channel that contains threads.</p><h4 id="client-threadmembersupdate" tabindex="-1"><a class="header-anchor" href="#client-threadmembersupdate" aria-hidden="true">#</a> Client#threadMembersUpdate</h4><p>Emitted when members are added or removed from a thread. Requires the <code>GUILD_MEMBERS</code> privileged intent.</p><h4 id="client-threadmemberupdate" tabindex="-1"><a class="header-anchor" href="#client-threadmemberupdate" aria-hidden="true">#</a> Client#threadMemberUpdate</h4><p>Emitted when the client user&#39;s thread member is updated.</p><h4 id="client-threadupdate" tabindex="-1"><a class="header-anchor" href="#client-threadupdate" aria-hidden="true">#</a> Client#threadUpdate</h4><p>Emitted when a thread is updated, e.g. name change, archive state change, locked state change.</p><h3 id="clientoptions-1" tabindex="-1"><a class="header-anchor" href="#clientoptions-1" aria-hidden="true">#</a> ClientOptions</h3><h4 id="clientoptions-failifnotexists" tabindex="-1"><a class="header-anchor" href="#clientoptions-failifnotexists" aria-hidden="true">#</a> ClientOptions#failIfNotExists</h4><p>This parameter sets the default behavior for <code>ReplyMessageOptions#failIfNotExists</code>, allowing or preventing an error when replying to an unknown Message.</p><h3 id="collectoroptions" tabindex="-1"><a class="header-anchor" href="#collectoroptions" aria-hidden="true">#</a> CollectorOptions</h3><h4 id="collectoroptions-filter" tabindex="-1"><a class="header-anchor" href="#collectoroptions-filter" aria-hidden="true">#</a> CollectorOptions#filter</h4><p>This parameter is now optional and will fall back to a function that always returns true if not provided.</p><h3 id="commandinteraction" tabindex="-1"><a class="header-anchor" href="#commandinteraction" aria-hidden="true">#</a> CommandInteraction</h3>',284),xe=r("Provides gateway support for slash command interactions. For more information refer to the "),we=r("slash commands"),ye=r(" section of the guide."),Me=o('<h3 id="guild-1" tabindex="-1"><a class="header-anchor" href="#guild-1" aria-hidden="true">#</a> Guild</h3><h4 id="guild-bans" tabindex="-1"><a class="header-anchor" href="#guild-bans" aria-hidden="true">#</a> Guild#bans</h4><p>Provides access to the Guild&#39;s <code>GuildBanManager</code>.</p><h4 id="guild-create" tabindex="-1"><a class="header-anchor" href="#guild-create" aria-hidden="true">#</a> Guild#create</h4><p><code>Guild#systemChannelFlags</code> can now be set in the <code>Guild#create</code> method.</p><h4 id="guild-edit" tabindex="-1"><a class="header-anchor" href="#guild-edit" aria-hidden="true">#</a> Guild#edit</h4><p>The <code>Guild#description</code> and <code>Guild#features</code> properties can now be edited.</p><h4 id="guild-editwelcomescreen" tabindex="-1"><a class="header-anchor" href="#guild-editwelcomescreen" aria-hidden="true">#</a> Guild#editWelcomeScreen</h4><p>Provides API support for bots to edit the Guild&#39;s <code>WelcomeScreen</code>.</p><h4 id="guild-emojis" tabindex="-1"><a class="header-anchor" href="#guild-emojis" aria-hidden="true">#</a> Guild#emojis</h4><p>The <code>GuildEmojiManager</code> class now extends <code>BaseGuildEmojiManager</code>. In addition to the existing methods, it now supports <code>GuildEmojiManager#fetch</code>.</p><h4 id="guild-fetchwelcomescreen" tabindex="-1"><a class="header-anchor" href="#guild-fetchwelcomescreen" aria-hidden="true">#</a> Guild#fetchWelcomeScreen</h4><p>Provides API support for fetching the Guild&#39;s <code>WelcomeScreen</code>.</p><h4 id="guild-fetchwidget-1" tabindex="-1"><a class="header-anchor" href="#guild-fetchwidget-1" aria-hidden="true">#</a> Guild#fetchWidget</h4><p>Provides API support for the Guild&#39;s Widget, containing information about the guild and its members.</p><h4 id="guild-invites" tabindex="-1"><a class="header-anchor" href="#guild-invites" aria-hidden="true">#</a> Guild#invites</h4><p>Provides access to the new <code>GuildInviteManager</code>.</p><h4 id="guild-nsfwlevel" tabindex="-1"><a class="header-anchor" href="#guild-nsfwlevel" aria-hidden="true">#</a> Guild#nsfwLevel</h4><p>The <code>Guild#nsfwLevel</code> property is now represented by the <code>NSFWLevel</code> enum.</p><h4 id="guild-premiumtier" tabindex="-1"><a class="header-anchor" href="#guild-premiumtier" aria-hidden="true">#</a> Guild#premiumTier</h4><p>The <code>Guild#premiumTier</code> property is now represented by the <code>PremiumTier</code> enum.</p><h4 id="guild-setchannelpositions" tabindex="-1"><a class="header-anchor" href="#guild-setchannelpositions" aria-hidden="true">#</a> Guild#setChannelPositions</h4><p>Now supports setting the parent of multiple channels, and locking their permissions via the <code>ChannelPosition#parent</code> and <code>ChannelPosition#lockPermissions</code> options.</p><h3 id="guildbanmanager" tabindex="-1"><a class="header-anchor" href="#guildbanmanager" aria-hidden="true">#</a> GuildBanManager</h3><p>Provides improved API support for handling and caching bans.</p><h3 id="guildchannel-1" tabindex="-1"><a class="header-anchor" href="#guildchannel-1" aria-hidden="true">#</a> GuildChannel</h3><h4 id="guildchannel-clone" tabindex="-1"><a class="header-anchor" href="#guildchannel-clone" aria-hidden="true">#</a> GuildChannel#clone</h4><p>Now supports setting the <code>position</code> property.</p><h3 id="guildchannelmanager" tabindex="-1"><a class="header-anchor" href="#guildchannelmanager" aria-hidden="true">#</a> GuildChannelManager</h3><h4 id="guildchannelmanager-fetch" tabindex="-1"><a class="header-anchor" href="#guildchannelmanager-fetch" aria-hidden="true">#</a> GuildChannelManager#fetch</h4><p>Now supports fetching the channels of a Guild.</p><h4 id="guildchannelmanager-fetchactivethreads" tabindex="-1"><a class="header-anchor" href="#guildchannelmanager-fetchactivethreads" aria-hidden="true">#</a> GuildChannelManager#fetchActiveThreads</h4><p>Retrieves a list of the active threads in a Guild.</p><h3 id="guildinvitemanager" tabindex="-1"><a class="header-anchor" href="#guildinvitemanager" aria-hidden="true">#</a> GuildInviteManager</h3><p>Aligns support for creating and fetching invites with the managers design. This replaces <code>Guild#fetchInvites</code>.</p><h3 id="guildmanager" tabindex="-1"><a class="header-anchor" href="#guildmanager" aria-hidden="true">#</a> GuildManager</h3><h4 id="guildmanager-create" tabindex="-1"><a class="header-anchor" href="#guildmanager-create" aria-hidden="true">#</a> GuildManager#create</h4><p>Now supports specifying the AFK and system channels when creating a new guild.</p><h4 id="guildmanager-fetch" tabindex="-1"><a class="header-anchor" href="#guildmanager-fetch" aria-hidden="true">#</a> GuildManager#fetch</h4><p>Now supports fetching multiple guilds, returning a <code>Promise&lt;Collection&lt;Snowflake, OAuth2Guild&gt;&gt;</code> if used in this way.</p><h3 id="guildemojimanager" tabindex="-1"><a class="header-anchor" href="#guildemojimanager" aria-hidden="true">#</a> GuildEmojiManager</h3><h4 id="guildemojimanager-fetch" tabindex="-1"><a class="header-anchor" href="#guildemojimanager-fetch" aria-hidden="true">#</a> GuildEmojiManager#fetch</h4><p>Provides API support for the <code>GET /guilds/{guild.id}/emojis</code> endpoint.</p><h3 id="guildmember-1" tabindex="-1"><a class="header-anchor" href="#guildmember-1" aria-hidden="true">#</a> GuildMember</h3><h4 id="guildmember-pending" tabindex="-1"><a class="header-anchor" href="#guildmember-pending" aria-hidden="true">#</a> GuildMember#pending</h4><p>Flags whether a member has passed the guild&#39;s membership gate. The flag is <code>true</code> before accepting and fires <code>guildMemberUpdate</code> when the member accepts.</p><h3 id="guildmembermanager-1" tabindex="-1"><a class="header-anchor" href="#guildmembermanager-1" aria-hidden="true">#</a> GuildMemberManager</h3><p>Several methods were added to <code>GuildMemberManager</code> to provide API support for uncached members.</p><h4 id="guildmembermanager-edit" tabindex="-1"><a class="header-anchor" href="#guildmembermanager-edit" aria-hidden="true">#</a> GuildMemberManager#edit</h4><p><code>guild.members.edit(&#39;123456789012345678&#39;, data, reason)</code> is equivalent to <code>GuildMember#edit(data, reason)</code>.</p><h4 id="guildmembermanager-kick" tabindex="-1"><a class="header-anchor" href="#guildmembermanager-kick" aria-hidden="true">#</a> GuildMemberManager#kick</h4><p><code>guild.members.kick(&#39;123456789012345678&#39;, reason)</code> is equivalent to <code>GuildMember#kick(reason)</code>.</p><h4 id="guildmembermanager-search" tabindex="-1"><a class="header-anchor" href="#guildmembermanager-search" aria-hidden="true">#</a> GuildMemberManager#search</h4><p>Provides API support for querying GuildMembers via the REST API endpoint. <code>GuildMemberManager#fetch</code> uses the websocket gateway to receive data.</p><h3 id="guildmemberrolemanager" tabindex="-1"><a class="header-anchor" href="#guildmemberrolemanager" aria-hidden="true">#</a> GuildMemberRoleManager</h3><h4 id="guildmemberrolemanager-botrole" tabindex="-1"><a class="header-anchor" href="#guildmemberrolemanager-botrole" aria-hidden="true">#</a> GuildMemberRoleManager#botRole</h4><p>Gets the managed role this member created when joining the guild if any.</p><h4 id="guildmemberrolemanager-premiumsubscriberrole" tabindex="-1"><a class="header-anchor" href="#guildmemberrolemanager-premiumsubscriberrole" aria-hidden="true">#</a> GuildMemberRoleManager#premiumSubscriberRole</h4><p>Gets the premium subscriber (booster) role if present on the member.</p><h3 id="guildpreview" tabindex="-1"><a class="header-anchor" href="#guildpreview" aria-hidden="true">#</a> GuildPreview</h3><h4 id="guildpreview-createdat" tabindex="-1"><a class="header-anchor" href="#guildpreview-createdat" aria-hidden="true">#</a> GuildPreview#createdAt</h4><h4 id="guildpreview-createdtimestamp" tabindex="-1"><a class="header-anchor" href="#guildpreview-createdtimestamp" aria-hidden="true">#</a> GuildPreview#createdTimestamp</h4><p>The datetime at which the GuildPreview was created.</p><h3 id="guildtemplate" tabindex="-1"><a class="header-anchor" href="#guildtemplate" aria-hidden="true">#</a> GuildTemplate</h3>',64),Ce=r("Provides API support for "),Te={href:"https://discord.com/developers/docs/resources/guild-template",target:"_blank",rel:"noopener noreferrer"},Ge=r("server templates"),Ie=r("."),Se=o('<h3 id="integration" tabindex="-1"><a class="header-anchor" href="#integration" aria-hidden="true">#</a> Integration</h3><h4 id="integration-roles" tabindex="-1"><a class="header-anchor" href="#integration-roles" aria-hidden="true">#</a> Integration#roles</h4><p>A Collection of Roles which are managed by the integration.</p><h3 id="interaction" tabindex="-1"><a class="header-anchor" href="#interaction" aria-hidden="true">#</a> Interaction</h3><p>Provides gateway support for slash command and message component interactions.</p>',5),Ae=r("For more information refer to the "),Ee=r("slash commands"),Pe=r(" and "),je=r("message components"),Re=r(" sections of the guide."),Ue=o('<h3 id="interactioncollector" tabindex="-1"><a class="header-anchor" href="#interactioncollector" aria-hidden="true">#</a> InteractionCollector</h3><p>Provides a way for users to collect any type of Interaction. This class has a more flexible design than other Collectors, able to be bound to any Guild, Channel, or Message as appropriate. TypeScript developers can also leverage generics to define the subclass of Interaction that will be returned.</p><h3 id="interactionwebhook" tabindex="-1"><a class="header-anchor" href="#interactionwebhook" aria-hidden="true">#</a> InteractionWebhook</h3><p>Provides webhook support specifically for interactions, due to their unique qualities.</p><h3 id="inviteguild" tabindex="-1"><a class="header-anchor" href="#inviteguild" aria-hidden="true">#</a> InviteGuild</h3><p>Provides API support for the partial Guild data available from an <code>Invite</code>.</p><h3 id="invitestageinstance" tabindex="-1"><a class="header-anchor" href="#invitestageinstance" aria-hidden="true">#</a> InviteStageInstance</h3><p>Provides API support for bots to inviting users to stage instances.</p><h3 id="message" tabindex="-1"><a class="header-anchor" href="#message" aria-hidden="true">#</a> Message</h3><h4 id="message-awaitmessagecomponent" tabindex="-1"><a class="header-anchor" href="#message-awaitmessagecomponent" aria-hidden="true">#</a> Message#awaitMessageComponent</h4><p>A shortcut method to create a promisified <code>InteractionCollector</code> which resolves to a single <code>MessageComponentInteraction</code>.</p><h4 id="message-createmessagecomponentcollector" tabindex="-1"><a class="header-anchor" href="#message-createmessagecomponentcollector" aria-hidden="true">#</a> Message#createMessageComponentCollector</h4><p>A shortcut method to create an <code>InteractionCollector</code> for components on a specific message.</p><h4 id="message-crosspostable" tabindex="-1"><a class="header-anchor" href="#message-crosspostable" aria-hidden="true">#</a> Message#crosspostable</h4><p>Checks permissions to see if a Message can be crossposted.</p><h4 id="message-edit" tabindex="-1"><a class="header-anchor" href="#message-edit" aria-hidden="true">#</a> Message#edit</h4><p>Editing and/or removing attachments when editing a Message is now supported.</p><h4 id="message-fetchreference" tabindex="-1"><a class="header-anchor" href="#message-fetchreference" aria-hidden="true">#</a> Message#fetchReference</h4><p>Provides support for fetching the Message referenced by <code>Message#reference</code>, if the client has access to do so.</p><h4 id="message-react" tabindex="-1"><a class="header-anchor" href="#message-react" aria-hidden="true">#</a> Message#react</h4><p>Now supports both <code>&lt;:name:id&gt;</code> and <code>&lt;a:name:id&gt;</code> as valid inputs.</p><h4 id="message-removeattachments" tabindex="-1"><a class="header-anchor" href="#message-removeattachments" aria-hidden="true">#</a> Message#removeAttachments</h4><p>Removes the attachments from a message. Requires <code>MANAGE_MESSAGES</code> to remove attachments from messages authored by other users.</p><h4 id="message-startthread" tabindex="-1"><a class="header-anchor" href="#message-startthread" aria-hidden="true">#</a> Message#startThread</h4><p>Starts a <code>ThreadChannel</code> using this message as the starter message.</p><h4 id="message-stickers" tabindex="-1"><a class="header-anchor" href="#message-stickers" aria-hidden="true">#</a> Message#stickers</h4><p>A Collection of Stickers in the message.</p><h3 id="messageactionrow" tabindex="-1"><a class="header-anchor" href="#messageactionrow" aria-hidden="true">#</a> MessageActionRow</h3><p>A builder class which makes constructing action row type message components easier.</p><h3 id="messageattachment" tabindex="-1"><a class="header-anchor" href="#messageattachment" aria-hidden="true">#</a> MessageAttachment</h3><h4 id="messageattachment-contenttype" tabindex="-1"><a class="header-anchor" href="#messageattachment-contenttype" aria-hidden="true">#</a> MessageAttachment#contentType</h4><p>The media type of a MessageAttachment.</p><h3 id="messagebutton" tabindex="-1"><a class="header-anchor" href="#messagebutton" aria-hidden="true">#</a> MessageButton</h3><p>A builder class which makes constructing button type message components easier.</p><h3 id="messagecomponentinteraction" tabindex="-1"><a class="header-anchor" href="#messagecomponentinteraction" aria-hidden="true">#</a> MessageComponentInteraction</h3><p>Provides gateway support for receiving interactions from message components. Subclass of <code>Interaction</code>.</p><h3 id="messageembed-1" tabindex="-1"><a class="header-anchor" href="#messageembed-1" aria-hidden="true">#</a> MessageEmbed</h3><h4 id="messageembed-setfields" tabindex="-1"><a class="header-anchor" href="#messageembed-setfields" aria-hidden="true">#</a> MessageEmbed#setFields</h4><p>Replaces all fields in the embed with the new array of fields provided.</p><p><code>embed.setFields(newFields)</code> is equivalent to <code>embed.spliceFields(0, embed.fields.length, newFields)</code>.</p><h3 id="messagemanager" tabindex="-1"><a class="header-anchor" href="#messagemanager" aria-hidden="true">#</a> MessageManager</h3><p>Methods were added to <code>MessageManager</code> to provide API support for uncached messages.</p><h4 id="messagemanager-crosspost" tabindex="-1"><a class="header-anchor" href="#messagemanager-crosspost" aria-hidden="true">#</a> MessageManager#crosspost</h4><p><code>channel.messages.crosspost(&#39;876543210987654321&#39;)</code> is equivalent to <code>message.crosspost()</code>.</p><h4 id="messagemanager-edit" tabindex="-1"><a class="header-anchor" href="#messagemanager-edit" aria-hidden="true">#</a> MessageManager#edit</h4><p><code>channel.messages.edit(&#39;876543210987654321&#39;, content, options)</code> is equivalent to <code>message.edit(content, options)</code>.</p><h4 id="messagemanager-pin" tabindex="-1"><a class="header-anchor" href="#messagemanager-pin" aria-hidden="true">#</a> MessageManager#pin</h4><p><code>channel.messages.pin(&#39;876543210987654321&#39;, options)</code> is approximately equivalent to <code>message.pin(options)</code> but does not resolve to a Message.</p><h4 id="messagemanager-react" tabindex="-1"><a class="header-anchor" href="#messagemanager-react" aria-hidden="true">#</a> MessageManager#react</h4><p><code>channel.messages.react(&#39;876543210987654321&#39;, emoji)</code> is approximately equivalent to <code>message.react(emoji)</code> but does not resolve to a MessageReaction.</p><h4 id="messagemanager-unpin" tabindex="-1"><a class="header-anchor" href="#messagemanager-unpin" aria-hidden="true">#</a> MessageManager#unpin</h4><p><code>channel.messages.unpin(&#39;876543210987654321&#39;, options)</code> is approximately equivalent to <code>message.unpin(options)</code> but does not resolve to a Message.</p><h3 id="messagementions" tabindex="-1"><a class="header-anchor" href="#messagementions" aria-hidden="true">#</a> MessageMentions</h3><h4 id="messagementions-replieduser" tabindex="-1"><a class="header-anchor" href="#messagementions-replieduser" aria-hidden="true">#</a> MessageMentions#repliedUser</h4><p>Checks if the author of a message being replied to has been mentioned.</p><h3 id="messagepayload" tabindex="-1"><a class="header-anchor" href="#messagepayload" aria-hidden="true">#</a> MessagePayload</h3><p>This class has been renamed from APIMessage. Global headers can now be set in the HTTP options.</p><h3 id="messageselectmenu" tabindex="-1"><a class="header-anchor" href="#messageselectmenu" aria-hidden="true">#</a> MessageSelectMenu</h3><p>A builder class which makes constructing select menu type message components easier.</p><h3 id="newschannel" tabindex="-1"><a class="header-anchor" href="#newschannel" aria-hidden="true">#</a> NewsChannel</h3><h4 id="newschannel-addfollower" tabindex="-1"><a class="header-anchor" href="#newschannel-addfollower" aria-hidden="true">#</a> NewsChannel#addFollower</h4><p>Provides API support for bots to follow announcements in other channels.</p><h4 id="newschannel-settype" tabindex="-1"><a class="header-anchor" href="#newschannel-settype" aria-hidden="true">#</a> NewsChannel#setType</h4><p>Allows conversion between NewsChannel and TextChannel.</p><h3 id="permissions-1" tabindex="-1"><a class="header-anchor" href="#permissions-1" aria-hidden="true">#</a> Permissions</h3><h4 id="permissions-stage-moderator" tabindex="-1"><a class="header-anchor" href="#permissions-stage-moderator" aria-hidden="true">#</a> Permissions#STAGE_MODERATOR</h4><p>Static bitfield representing the permissions required to moderate a stage channel.</p><h3 id="permissionoverwritemanager" tabindex="-1"><a class="header-anchor" href="#permissionoverwritemanager" aria-hidden="true">#</a> PermissionOverwriteManager</h3><p>Replaces the <code>createOverwrite</code>, <code>updateOverwrite</code>, and <code>overwritePermissions</code> methods of <code>GuildChannel</code>, aligning the design with other Managers.</p><h3 id="role" tabindex="-1"><a class="header-anchor" href="#role" aria-hidden="true">#</a> Role</h3><h4 id="role-tags" tabindex="-1"><a class="header-anchor" href="#role-tags" aria-hidden="true">#</a> Role#tags</h4><p>Tags for roles belonging to bots, integrations, or premium subscribers.</p><h3 id="rolemanager-1" tabindex="-1"><a class="header-anchor" href="#rolemanager-1" aria-hidden="true">#</a> RoleManager</h3><h4 id="rolemanager-botrolefor" tabindex="-1"><a class="header-anchor" href="#rolemanager-botrolefor" aria-hidden="true">#</a> RoleManager#botRoleFor</h4><p>Gets the managed role a bot created when joining the guild, if any.</p><h4 id="rolemanager-edit" tabindex="-1"><a class="header-anchor" href="#rolemanager-edit" aria-hidden="true">#</a> RoleManager#edit</h4><p><code>guild.roles.edit(&#39;123456789098765432&#39;, options)</code> is equivalent to <code>role.edit(options)</code>.</p><h4 id="rolemanager-premiumsubscriberrole" tabindex="-1"><a class="header-anchor" href="#rolemanager-premiumsubscriberrole" aria-hidden="true">#</a> RoleManager#premiumSubscriberRole</h4><p>Gets the premium subscriber (booster) role for the Guild, if any.</p><h3 id="selectmenuinteraction" tabindex="-1"><a class="header-anchor" href="#selectmenuinteraction" aria-hidden="true">#</a> SelectMenuInteraction</h3><p>Provides gateway support for a <code>MessageComponentInteraction</code> coming from a select menu component.</p><h3 id="stagechannel" tabindex="-1"><a class="header-anchor" href="#stagechannel" aria-hidden="true">#</a> StageChannel</h3><p>Provides API support for stage channels.</p><h3 id="stageinstance" tabindex="-1"><a class="header-anchor" href="#stageinstance" aria-hidden="true">#</a> StageInstance</h3><p>Provides API support for stage instances. Stage instances contain information about live stages.</p><h3 id="stageinstancemanager" tabindex="-1"><a class="header-anchor" href="#stageinstancemanager" aria-hidden="true">#</a> StageInstanceManager</h3><p>Provides API support for the bot to create, edit, and delete live stage instances, and stores a cache of stage instances.</p><h3 id="sticker" tabindex="-1"><a class="header-anchor" href="#sticker" aria-hidden="true">#</a> Sticker</h3><p>Provides API support for Discord Stickers.</p><h3 id="stickerpack" tabindex="-1"><a class="header-anchor" href="#stickerpack" aria-hidden="true">#</a> StickerPack</h3><p>Provides API support for Discord Sticker packs.</p><h3 id="textchannel-1" tabindex="-1"><a class="header-anchor" href="#textchannel-1" aria-hidden="true">#</a> TextChannel</h3><h4 id="textchannel-awaitmessagecomponent" tabindex="-1"><a class="header-anchor" href="#textchannel-awaitmessagecomponent" aria-hidden="true">#</a> TextChannel#awaitMessageComponent</h4><p>A shortcut method to create a promisified <code>InteractionCollector</code> which resolves to a single <code>MessageComponentInteraction</code>.</p><h4 id="textchannel-createmessagecomponentcollector" tabindex="-1"><a class="header-anchor" href="#textchannel-createmessagecomponentcollector" aria-hidden="true">#</a> TextChannel#createMessageComponentCollector</h4><p>A shortcut method to create an <code>InteractionCollector</code> for components on a specific channel.</p><h4 id="textchannel-settype" tabindex="-1"><a class="header-anchor" href="#textchannel-settype" aria-hidden="true">#</a> TextChannel#setType</h4><p>Allows conversion between <code>TextChannel</code> and <code>NewsChannel</code>.</p><h4 id="textchannel-threads" tabindex="-1"><a class="header-anchor" href="#textchannel-threads" aria-hidden="true">#</a> TextChannel#threads</h4><p>Provides access to the <code>ThreadManager</code> for this channel.</p><h3 id="threadchannel" tabindex="-1"><a class="header-anchor" href="#threadchannel" aria-hidden="true">#</a> ThreadChannel</h3><p>Provides API support for thread channels.</p><h3 id="threadchannelmanager" tabindex="-1"><a class="header-anchor" href="#threadchannelmanager" aria-hidden="true">#</a> ThreadChannelManager</h3><p>Provides API support for the bot to create, edit, and delete threads, and stores a cache of <code>ThreadChannels</code>.</p><h3 id="threadmember" tabindex="-1"><a class="header-anchor" href="#threadmember" aria-hidden="true">#</a> ThreadMember</h3><p>Represent a member of a thread and their thread-specific metadata.</p><h3 id="threadmembermanager" tabindex="-1"><a class="header-anchor" href="#threadmembermanager" aria-hidden="true">#</a> ThreadMemberManager</h3><p>Provides API support for the bot to add and remove members from threads, and stores a cache of <code>ThreadMembers</code>.</p><h3 id="typing" tabindex="-1"><a class="header-anchor" href="#typing" aria-hidden="true">#</a> Typing</h3><p>Represents a typing state for a user in a channel.</p><h3 id="webhook" tabindex="-1"><a class="header-anchor" href="#webhook" aria-hidden="true">#</a> Webhook</h3><h4 id="webhook-deletemessage" tabindex="-1"><a class="header-anchor" href="#webhook-deletemessage" aria-hidden="true">#</a> Webhook#deleteMessage</h4><p>Webhooks can now delete messages that were sent by the Webhook.</p><h4 id="webhook-editmessage" tabindex="-1"><a class="header-anchor" href="#webhook-editmessage" aria-hidden="true">#</a> Webhook#editMessage</h4><p>Webhooks can now edit messages that were sent by the Webhook.</p><h4 id="webhook-fetchmessage" tabindex="-1"><a class="header-anchor" href="#webhook-fetchmessage" aria-hidden="true">#</a> Webhook#fetchMessage</h4><p>Webhooks can now fetch messages that were sent by the Webhook.</p><h4 id="webhook-sourcechannel" tabindex="-1"><a class="header-anchor" href="#webhook-sourcechannel" aria-hidden="true">#</a> Webhook#sourceChannel</h4><h4 id="webhook-sourceguild" tabindex="-1"><a class="header-anchor" href="#webhook-sourceguild" aria-hidden="true">#</a> Webhook#sourceGuild</h4><p>Webhooks can now have a <code>sourceGuild</code> and <code>sourceChannel</code> if the message is being crossposted.</p><h3 id="welcomechannel" tabindex="-1"><a class="header-anchor" href="#welcomechannel" aria-hidden="true">#</a> WelcomeChannel</h3><p>Represents the channels that can be seen in a Guild&#39;s <code>WelcomeScreen</code>.</p><h3 id="welcomescreen" tabindex="-1"><a class="header-anchor" href="#welcomescreen" aria-hidden="true">#</a> WelcomeScreen</h3><p>Provides API support for a Guild&#39;s welcome screen.</p><h3 id="widget" tabindex="-1"><a class="header-anchor" href="#widget" aria-hidden="true">#</a> Widget</h3><p>Represents a Guild&#39;s widget.</p><h3 id="widgetmember" tabindex="-1"><a class="header-anchor" href="#widgetmember" aria-hidden="true">#</a> WidgetMember</h3><p>Partial information about a guild&#39;s members stored in a widget.</p><h3 id="util-1" tabindex="-1"><a class="header-anchor" href="#util-1" aria-hidden="true">#</a> Util</h3><h4 id="formatters" tabindex="-1"><a class="header-anchor" href="#formatters" aria-hidden="true">#</a> Formatters</h4><p>A number of new formatter functions are provided in the Util class, to easily handle adding markdown to strings.</p><h4 id="util-resolvepartialemoji" tabindex="-1"><a class="header-anchor" href="#util-resolvepartialemoji" aria-hidden="true">#</a> Util#resolvePartialEmoji</h4><p>A helper method that attempts to resolve properties for a raw emoji object from input data, without the use of the discord.js Client class or its EmojiManager.</p><h4 id="util-verifystring" tabindex="-1"><a class="header-anchor" href="#util-verifystring" aria-hidden="true">#</a> Util#verifyString</h4><p>A helper method which is used to internally validate string arguments provided to methods in discord.js.</p>',135);c.render=function(r,o){const c=e("CodeGroupItem"),De=e("CodeGroup"),Oe=e("OutboundLink"),Ne=e("RouterLink");return a(),n(d,null,[l,h,p,u,s(De,null,{default:t((()=>[s(c,{title:"npm"},{default:t((()=>[m])),_:1}),s(c,{title:"yarn"},{default:t((()=>[g])),_:1}),s(c,{title:"pnpm"},{default:t((()=>[b])),_:1})])),_:1}),i("p",null,[f,k,v,i("a",x,[w,s(Oe)]),y]),s(De,null,{default:t((()=>[s(c,{title:"npm"},{default:t((()=>[M])),_:1}),s(c,{title:"yarn"},{default:t((()=>[C])),_:1}),s(c,{title:"pnpm"},{default:t((()=>[T])),_:1})])),_:1}),G,I,S,i("p",null,[A,s(Ne,{to:"/interactions/registering-slash-commands.html"},{default:t((()=>[E])),_:1}),P]),j,i("p",null,[R,s(Ne,{to:"/interactions/buttons.html"},{default:t((()=>[U])),_:1}),D]),O,i("p",null,[N,s(Ne,{to:"/popular-topics/threads.html"},{default:t((()=>[_])),_:1}),F]),W,i("p",null,[L,i("a",q,[V,s(Oe)]),B]),i("p",null,[z,s(Ne,{to:"/voice/"},{default:t((()=>[H])),_:1}),Y]),K,i("p",null,[J,s(Ne,{to:"/popular-topics/intents.html"},{default:t((()=>[$])),_:1}),X]),Q,i("p",null,[Z,i("a",ee,[ae,s(Oe)]),ne]),se,i("p",null,[te,i("a",ie,[de,s(Oe)]),re]),oe,i("p",null,[ce,le,he,pe,ue,me,ge,i("a",be,[fe,s(Oe)]),ke]),ve,i("p",null,[xe,s(Ne,{to:"/interactions/registering-slash-commands.html"},{default:t((()=>[we])),_:1}),ye]),Me,i("p",null,[Ce,i("a",Te,[Ge,s(Oe)]),Ie]),Se,i("p",null,[Ae,s(Ne,{to:"/interactions/replying-to-slash-commands.html"},{default:t((()=>[Ee])),_:1}),Pe,s(Ne,{to:"/interactions/buttons.html#responding-to-buttons.html"},{default:t((()=>[je])),_:1}),Re]),Ue],64)};export{c as default};
