import{r as n,o as a,c as s,a as e,b as t,w as o,F as i,d as c,f as p}from"./app.554c1b80.js";const l={},r=e("h1",{id:"partial-structures",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#partial-structures","aria-hidden":"true"},"#"),c(" Partial Structures")],-1),u=e("p",null,"Partial Structures were introduced to the library in version 12 and are optionally received whenever there is insufficient data to emit the client event with a fully intact discord.js structure. They are (as the name suggests) incomplete, and you cannot expect them to have any information besides their ID. All other properties and methods on this object should be considered invalid and defunct. Before this feature, discord.js client events would not emit if one of the necessary structures could not be built with sufficient data to guarantee a fully functional structure. If you do not opt into partials, this is still the case.",-1),d=c("One example leveraging partials is the handling of reactions on uncached messages, which is explained on "),h=c("this page"),k=c("."),g=p('<p>Prior you had to either handle the undocumented <code>raw</code> event or fetch the respective messages on startup. The first approach was prone to errors and unexpected internal behavior. The second was not fully fail-proof either, as the messages could still be uncached if cache size was exceeded in busy channels.</p><h2 id="enabling-partials" tabindex="-1"><a class="header-anchor" href="#enabling-partials" aria-hidden="true">#</a> Enabling Partials</h2><p>As we said earlier, partials do not have all the information necessary to make them fully functional discord.js structures, so it would not be a good idea to enable the functionality by default. Users should know how to handle them before opting into this feature.</p><p>You choose which structures you want to emit as partials as client options when instantiating your bot client. Available structures are: <code>USER</code>, <code>CHANNEL</code> (only DM channels can be uncached, server channels will always be available), <code>GUILD_MEMBER</code>, <code>MESSAGE</code>, and <code>REACTION</code>.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Client <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;discord.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Client</span><span class="token punctuation">(</span><span class="token punctuation">{</span> partials<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;MESSAGE&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CHANNEL&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;REACTION&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Make sure you enable all partials you need for your use case! If you miss one, the event does not get emitted.</p></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Partial structures are enabled globally. You cannot make them work for only a specific event or cache, and you very likely need to adapt other parts of your code that are accessing data from the relevant caches. All caches holding the respective structure type might return partials as well!</p></div><h2 id="handling-partial-data" tabindex="-1"><a class="header-anchor" href="#handling-partial-data" aria-hidden="true">#</a> Handling Partial data</h2><p>All structures you can choose to use partials for have a new property, fittingly called <code>.partial</code>, indicating if it is a fully functional or partial instance of its class. The value is <code>true</code> if partial, <code>false</code> if fully functional.</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Partial data is only ever guaranteed to contain an ID! Do not assume any property or method to work when dealing with a partial structure!</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span>partial<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;The message is partial.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;The message is not partial.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="obtaining-the-full-structure" tabindex="-1"><a class="header-anchor" href="#obtaining-the-full-structure" aria-hidden="true">#</a> Obtaining the full structure</h2>',12),m=c("Along with "),b=e("code",null,".partial",-1),f=c(" to check if the structure you call it on is partial or not, the library also introduced a "),v=e("code",null,".fetch()",-1),y=c(" method to retrieve the missing data from the API and complete the structure. The method returns a "),w={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"},A=c("Promise"),j=c(" you need to handle. After the Promise resolves (and with it, the missing data arrived), you can use the structure as you would before."),I=p('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span>partial<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\tmessage<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t\t<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">fullMessage</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t\t\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fullMessage<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\t\t<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t\t\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Something went wrong when fetching the message: &#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>You cannot fetch deleted data from the API. For message deletions, <code>messageDelete</code> will only emit with the ID, which you cannot use to fetch the complete message containing content, author, or other information, as it is already inaccessible by the time you receive the event.</p></div>',2);l.render=function(c,p){const l=n("RouterLink"),N=n("OutboundLink");return a(),s(i,null,[r,u,e("p",null,[d,t(l,{to:"/popular-topics/reactions.html#listening-for-reactions-on-old-messages"},{default:o((()=>[h])),_:1}),k]),g,e("p",null,[m,b,f,v,y,e("a",w,[A,t(N)]),j]),I],64)};export{l as default};
