import{r as n,o as s,c as a,a as t,b as e,w as o,F as p,d as c,f as l}from"./app.554c1b80.js";const i={},u=t("h1",{id:"creating-commands",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#creating-commands","aria-hidden":"true"},"#"),c(" Creating commands")],-1),r={class:"custom-container tip"},d=t("p",{class:"custom-container-title"},"TIP",-1),k=c("This page is a follow-up and bases its code on "),m=c("the previous page"),b=c("."),h=c("ping"),g=c(" Pong! "),f=c("Discord allows developers to register "),y={href:"https://discord.com/developers/docs/interactions/application-commands",target:"_blank",rel:"noopener noreferrer"},v=c("slash commands"),w=c(", which provide users a first-class way of interacting directly with your application. Before being able to reply to a command, you must first register it."),j=t("h2",{id:"registering-commands",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#registering-commands","aria-hidden":"true"},"#"),c(" Registering commands")],-1),_=c("This section will cover only the bare minimum to get you started, but you can refer to our "),C=c("in-depth page on registering slash commands"),I=c(" for further details. It covers guild commands, global commands, options, option types, and choices."),x=t("h3",{id:"command-deployment-script",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#command-deployment-script","aria-hidden":"true"},"#"),c(" Command deployment script")],-1),T=t("p",null,[c("Create a "),t("code",null,"deploy-commands.js"),c(" file in your project directory. This file will be used to register and update the slash commands for your bot application.")],-1),N=c("You'll need to install "),D={href:"https://github.com/discordjs/builders",target:"_blank",rel:"noopener noreferrer"},R=t("code",null,"@discordjs/builders",-1),S=c(", "),Y={href:"https://github.com/discordjs/discord.js-modules/blob/main/packages/rest/",target:"_blank",rel:"noopener noreferrer"},P=t("code",null,"@discordjs/rest",-1),G=c(", and "),U={href:"https://github.com/discordjs/discord-api-types/",target:"_blank",rel:"noopener noreferrer"},A=t("code",null,"discord-api-types",-1),B=c("."),$=t("div",{class:"language-bash ext-sh"},[t("pre",{class:"language-bash"},[t("code",null,[t("span",{class:"token function"},"npm"),c(),t("span",{class:"token function"},"install"),c(" @discordjs/builders @discordjs/rest discord-api-types\n")])])],-1),O=t("div",{class:"language-bash ext-sh"},[t("pre",{class:"language-bash"},[t("code",null,[t("span",{class:"token function"},"yarn"),c(),t("span",{class:"token function"},"add"),c(" @discordjs/builders @discordjs/rest discord-api-types\n")])])],-1),q=t("div",{class:"language-bash ext-sh"},[t("pre",{class:"language-bash"},[t("code",null,[t("span",{class:"token function"},"pnpm"),c(),t("span",{class:"token function"},"add"),c(" @discordjs/builders @discordjs/rest discord-api-types\n")])])],-1),L=t("p",null,"Below is a deployment script you can use. Focus on these variables:",-1),E=t("li",null,[t("code",null,"clientId"),c(": Your client's id")],-1),M=t("li",null,[t("code",null,"guildId"),c(": Your development server's id")],-1),F=t("code",null,"commands",-1),z=c(": An array of commands to register. The "),H=c("slash command builder"),J=c(" from "),K=t("code",null,"@discordjs/builders",-1),Q=c(" is used to build the data for your commands"),V=t("div",{class:"custom-container tip"},[t("p",{class:"custom-container-title"},"TIP"),t("p",null,'In order to get your client and guild ids, open Discord and go to your settings. On the "Advanced" page, turn on "Developer Mode". This will enable a "Copy ID" button in the context menu when you right-click on a server icon, a user\'s profile, etc.')],-1),W=t("div",{class:"language-javascript ext-js line-numbers-mode"},[t("pre",{class:"language-javascript"},[t("code",null,[t("span",{class:"token keyword"},"const"),c(),t("span",{class:"token punctuation"},"{"),c(" SlashCommandBuilder "),t("span",{class:"token punctuation"},"}"),c(),t("span",{class:"token operator"},"="),c(),t("span",{class:"token function"},"require"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'@discordjs/builders'"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),c("\n"),t("span",{class:"token keyword"},"const"),c(),t("span",{class:"token punctuation"},"{"),c(),t("span",{class:"token constant"},"REST"),c(),t("span",{class:"token punctuation"},"}"),c(),t("span",{class:"token operator"},"="),c(),t("span",{class:"token function"},"require"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'@discordjs/rest'"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),c("\n"),t("span",{class:"token keyword"},"const"),c(),t("span",{class:"token punctuation"},"{"),c(" Routes "),t("span",{class:"token punctuation"},"}"),c(),t("span",{class:"token operator"},"="),c(),t("span",{class:"token function"},"require"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'discord-api-types/v9'"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),c("\n"),t("span",{class:"token keyword"},"const"),c(),t("span",{class:"token punctuation"},"{"),c(" clientId"),t("span",{class:"token punctuation"},","),c(" guildId"),t("span",{class:"token punctuation"},","),c(" token "),t("span",{class:"token punctuation"},"}"),c(),t("span",{class:"token operator"},"="),c(),t("span",{class:"token function"},"require"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'./config.json'"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),c("\n\n"),t("span",{class:"token keyword"},"const"),c(" commands "),t("span",{class:"token operator"},"="),c(),t("span",{class:"token punctuation"},"["),c("\n\t"),t("span",{class:"token keyword"},"new"),c(),t("span",{class:"token class-name"},"SlashCommandBuilder"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"setName"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'ping'"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"setDescription"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'Replies with pong!'"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),c("\n\t"),t("span",{class:"token keyword"},"new"),c(),t("span",{class:"token class-name"},"SlashCommandBuilder"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"setName"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'server'"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"setDescription"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'Replies with server info!'"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),c("\n\t"),t("span",{class:"token keyword"},"new"),c(),t("span",{class:"token class-name"},"SlashCommandBuilder"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"setName"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'user'"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"setDescription"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'Replies with user info!'"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),c("\n"),t("span",{class:"token punctuation"},"]"),c("\n\t"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"map"),t("span",{class:"token punctuation"},"("),t("span",{class:"token parameter"},"command"),c(),t("span",{class:"token operator"},"=>"),c(" command"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"toJSON"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),c("\n\n"),t("span",{class:"token keyword"},"const"),c(" rest "),t("span",{class:"token operator"},"="),c(),t("span",{class:"token keyword"},"new"),c(),t("span",{class:"token class-name"},"REST"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),c(" version"),t("span",{class:"token operator"},":"),c(),t("span",{class:"token string"},"'9'"),c(),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"setToken"),t("span",{class:"token punctuation"},"("),c("token"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),c("\n\nrest"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"put"),t("span",{class:"token punctuation"},"("),c("Routes"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"applicationGuildCommands"),t("span",{class:"token punctuation"},"("),c("clientId"),t("span",{class:"token punctuation"},","),c(" guildId"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},","),c(),t("span",{class:"token punctuation"},"{"),c(" body"),t("span",{class:"token operator"},":"),c(" commands "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),c("\n\t"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"then"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),c(),t("span",{class:"token operator"},"=>"),c(" console"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"log"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},"'Successfully registered application commands.'"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},")"),c("\n\t"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"catch"),t("span",{class:"token punctuation"},"("),c("console"),t("span",{class:"token punctuation"},"."),c("error"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),c("\n")])]),t("div",{class:"highlight-lines"},[t("br"),t("br"),t("br"),t("div",{class:"highlight-line"}," "),t("br"),t("div",{class:"highlight-line"}," "),t("div",{class:"highlight-line"}," "),t("div",{class:"highlight-line"}," "),t("div",{class:"highlight-line"}," "),t("div",{class:"highlight-line"}," "),t("div",{class:"highlight-line"}," "),t("br"),t("br"),t("br"),t("br"),t("br"),t("br")]),t("div",{class:"line-numbers"},[t("span",{class:"line-number"},"1"),t("br"),t("span",{class:"line-number"},"2"),t("br"),t("span",{class:"line-number"},"3"),t("br"),t("span",{class:"line-number"},"4"),t("br"),t("span",{class:"line-number"},"5"),t("br"),t("span",{class:"line-number"},"6"),t("br"),t("span",{class:"line-number"},"7"),t("br"),t("span",{class:"line-number"},"8"),t("br"),t("span",{class:"line-number"},"9"),t("br"),t("span",{class:"line-number"},"10"),t("br"),t("span",{class:"line-number"},"11"),t("br"),t("span",{class:"line-number"},"12"),t("br"),t("span",{class:"line-number"},"13"),t("br"),t("span",{class:"line-number"},"14"),t("br"),t("span",{class:"line-number"},"15"),t("br"),t("span",{class:"line-number"},"16"),t("br"),t("span",{class:"line-number"},"17"),t("br")])],-1),X=t("div",{class:"language-json ext-json line-numbers-mode"},[t("pre",{class:"language-json"},[t("code",null,[t("span",{class:"token punctuation"},"{"),c("\n\t"),t("span",{class:"token property"},'"clientId"'),t("span",{class:"token operator"},":"),c(),t("span",{class:"token string"},'"123456789012345678"'),t("span",{class:"token punctuation"},","),c("\n\t"),t("span",{class:"token property"},'"guildId"'),t("span",{class:"token operator"},":"),c(),t("span",{class:"token string"},'"876543210987654321"'),t("span",{class:"token punctuation"},","),c("\n\t"),t("span",{class:"token property"},'"token"'),t("span",{class:"token operator"},":"),c(),t("span",{class:"token string"},'"your-token-goes-here"'),c("\n"),t("span",{class:"token punctuation"},"}"),c("\n")])]),t("div",{class:"highlight-lines"},[t("br"),t("div",{class:"highlight-line"}," "),t("div",{class:"highlight-line"}," "),t("br"),t("br")]),t("div",{class:"line-numbers"},[t("span",{class:"line-number"},"1"),t("br"),t("span",{class:"line-number"},"2"),t("br"),t("span",{class:"line-number"},"3"),t("br"),t("span",{class:"line-number"},"4"),t("br"),t("span",{class:"line-number"},"5"),t("br")])],-1),Z=c("Once you fill in these values, run "),nn=t("code",null,"node deploy-commands.js",-1),sn=c(" in your project directory to register your commands to a single guild. It's also possible to "),an=c("register commands globally"),tn=c("."),en=t("div",{class:"custom-container tip"},[t("p",{class:"custom-container-title"},"TIP"),t("p",null,[c("You only need to run "),t("code",null,"node deploy-commands.js"),c(" once. You should only run it again if you add or edit existing commands.")])],-1),on=t("h2",{id:"replying-to-commands",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#replying-to-commands","aria-hidden":"true"},"#"),c(" Replying to commands")],-1),pn=c("Once you've registered your commands, you can listen for interactions via "),cn=c(" in your "),ln=t("code",null,"index.js",-1),un=c(" file."),rn=c("You should first check if an interaction is a command via "),dn=t("code",null,".isCommand()",-1),kn=c(", and then check the "),mn=t("code",null,".commandName",-1),bn=c(" property to know which command it is. You can respond to interactions with "),hn=t("code",null,".reply()",-1),gn=c("."),fn=l('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;ready&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Ready!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nclient<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;interactionCreate&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token parameter">interaction</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>interaction<span class="token punctuation">.</span><span class="token function">isCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\n\t<span class="token keyword">const</span> <span class="token punctuation">{</span> commandName <span class="token punctuation">}</span> <span class="token operator">=</span> interaction<span class="token punctuation">;</span>\n\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>commandName <span class="token operator">===</span> <span class="token string">&#39;ping&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">await</span> interaction<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&#39;Pong!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>commandName <span class="token operator">===</span> <span class="token string">&#39;server&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">await</span> interaction<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&#39;Server info.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>commandName <span class="token operator">===</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">await</span> interaction<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&#39;User info.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nclient<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="server-info-command" tabindex="-1"><a class="header-anchor" href="#server-info-command" aria-hidden="true">#</a> Server info command</h3>',2),yn=c('Note that servers are referred to as "guilds" in the Discord API and discord.js library. '),vn=t("code",null,"interaction.guild",-1),wn=c(" refers to the guild the interaction was sent in (a "),jn=c(" instance), which exposes properties such as "),_n=t("code",null,".name",-1),Cn=c(" or "),In=t("code",null,".memberCount",-1),xn=c("."),Tn=l('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;interactionCreate&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token parameter">interaction</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>interaction<span class="token punctuation">.</span><span class="token function">isCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\n\t<span class="token keyword">const</span> <span class="token punctuation">{</span> commandName <span class="token punctuation">}</span> <span class="token operator">=</span> interaction<span class="token punctuation">;</span>\n\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>commandName <span class="token operator">===</span> <span class="token string">&#39;ping&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">await</span> interaction<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&#39;Pong!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>commandName <span class="token operator">===</span> <span class="token string">&#39;server&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">await</span> interaction<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Server name: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>interaction<span class="token punctuation">.</span>guild<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\nTotal members: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>interaction<span class="token punctuation">.</span>guild<span class="token punctuation">.</span>memberCount<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>commandName <span class="token operator">===</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">await</span> interaction<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&#39;User info.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>',1),Nn=c("server"),Dn=c(" Server name: Discord.js Guide "),Rn=t("br",null,null,-1),Sn=c(" Total members: 2 "),Yn=t("p",null,[c("You could also display the date the server was created, or the server's verification level. You would do those in the same manner–use "),t("code",null,"interaction.guild.createdAt"),c(" or "),t("code",null,"interaction.guild.verificationLevel"),c(", respectively.")],-1),Pn={class:"custom-container tip"},Gn=t("p",{class:"custom-container-title"},"TIP",-1),Un=c("Refer to the "),An=c(" documentation for a list of all the available properties and methods!"),Bn=t("h3",{id:"user-info-command",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#user-info-command","aria-hidden":"true"},"#"),c(" User info command")],-1),$n=c('A "user" refers to a Discord user. '),On=t("code",null,"interaction.user",-1),qn=c(" refers to the user the interaction was sent by (a "),Ln=c(" instance), which exposes properties such as "),En=t("code",null,".tag",-1),Mn=c(" or "),Fn=t("code",null,".id",-1),zn=c("."),Hn=l('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;interactionCreate&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token parameter">interaction</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>interaction<span class="token punctuation">.</span><span class="token function">isCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\n\t<span class="token keyword">const</span> <span class="token punctuation">{</span> commandName <span class="token punctuation">}</span> <span class="token operator">=</span> interaction<span class="token punctuation">;</span>\n\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>commandName <span class="token operator">===</span> <span class="token string">&#39;ping&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">await</span> interaction<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&#39;Pong!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>commandName <span class="token operator">===</span> <span class="token string">&#39;server&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">await</span> interaction<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Server name: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>interaction<span class="token punctuation">.</span>guild<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\nTotal members: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>interaction<span class="token punctuation">.</span>guild<span class="token punctuation">.</span>memberCount<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>commandName <span class="token operator">===</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">await</span> interaction<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Your tag: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>interaction<span class="token punctuation">.</span>user<span class="token punctuation">.</span>tag<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\nYour id: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>interaction<span class="token punctuation">.</span>user<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>',1),Jn=c("user"),Kn=c(" Your tag: User#0001 "),Qn=t("br",null,null,-1),Vn=c(" Your id: 123456789012345678 "),Wn={class:"custom-container tip"},Xn=t("p",{class:"custom-container-title"},"TIP",-1),Zn=c("Refer to the "),ns=c(" documentation for a list of all the available properties and methods!"),ss=l('<p>And there you have it!</p><h2 id="the-problem-with-if-else-if" tabindex="-1"><a class="header-anchor" href="#the-problem-with-if-else-if" aria-hidden="true">#</a> The problem with <code>if</code>/<code>else if</code></h2><p>If you don&#39;t plan on making more than a couple commands, then using an <code>if</code>/<code>else if</code> chain is fine; however, this isn&#39;t always the case. Using a giant <code>if</code>/<code>else if</code> chain will only hinder your development process in the long run.</p><p>Here&#39;s a small list of reasons why you shouldn&#39;t do so:</p>',4),as=t("li",null,"Takes longer to find a piece of code you want;",-1),ts=c("Easier to fall victim to "),es={href:"https://en.wikipedia.org/wiki/Spaghetti_code",target:"_blank",rel:"noopener noreferrer"},os=c("spaghetti code"),ps=c(";"),cs=t("li",null,"Difficult to maintain as it grows;",-1),ls=t("li",null,"Difficult to debug;",-1),is=t("li",null,"Difficult to organize;",-1),us=t("li",null,"General bad practice.",-1),rs=t("p",null,'Next, we\'ll be diving into something called a "command handler"–code that makes handling commands easier and much more efficient. This allows you to move your commands into individual files.',-1),ds=t("h2",{id:"resulting-code",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#resulting-code","aria-hidden":"true"},"#"),c(" Resulting code")],-1);i.render=function(c,l){const i=n("RouterLink"),ks=n("DiscordInteraction"),ms=n("DiscordMessage"),bs=n("DiscordMessages"),hs=n("OutboundLink"),gs=n("CodeGroupItem"),fs=n("CodeGroup"),ys=n("DocsLink"),vs=n("ResultingCode");return s(),a(p,null,[u,t("div",r,[d,t("p",null,[k,e(i,{to:"/creating-your-bot/"},{default:o((()=>[m])),_:1}),b])]),e(bs,null,{default:o((()=>[e(ms,{profile:"bot"},{interactions:o((()=>[e(ks,{profile:"user",command:!0},{default:o((()=>[h])),_:1})])),default:o((()=>[g])),_:1})])),_:1}),t("p",null,[f,t("a",y,[v,e(hs)]),w]),j,t("p",null,[_,e(i,{to:"/interactions/registering-slash-commands.html"},{default:o((()=>[C])),_:1}),I]),x,T,t("p",null,[N,t("a",D,[R,e(hs)]),S,t("a",Y,[P,e(hs)]),G,t("a",U,[A,e(hs)]),B]),e(fs,null,{default:o((()=>[e(gs,{title:"npm"},{default:o((()=>[$])),_:1}),e(gs,{title:"yarn"},{default:o((()=>[O])),_:1}),e(gs,{title:"pnpm"},{default:o((()=>[q])),_:1})])),_:1}),L,t("ul",null,[E,M,t("li",null,[F,z,e(i,{to:"/popular-topics/builders.html#slash-command-builders"},{default:o((()=>[H])),_:1}),J,K,Q])]),V,e(fs,null,{default:o((()=>[e(gs,{title:"deploy-commands.js"},{default:o((()=>[W])),_:1}),e(gs,{title:"config.json"},{default:o((()=>[X])),_:1})])),_:1}),t("p",null,[Z,nn,sn,e(i,{to:"/interactions/registering-slash-commands.html#global-commands"},{default:o((()=>[an])),_:1}),tn]),en,on,t("p",null,[pn,e(ys,{path:"class/Client?scrollTo=e-interactionCreate"}),cn,ln,un]),t("p",null,[rn,e(ys,{path:"class/Interaction?scrollTo=isCommand",type:"method"},{default:o((()=>[dn])),_:1}),kn,e(ys,{path:"class/CommandInteraction?scrollTo=commandName"},{default:o((()=>[mn])),_:1}),bn,e(ys,{path:"class/CommandInteraction?scrollTo=reply"},{default:o((()=>[hn])),_:1}),gn]),fn,t("p",null,[yn,vn,wn,e(ys,{path:"class/Guild"}),jn,_n,Cn,In,xn]),Tn,e(bs,null,{default:o((()=>[e(ms,{profile:"bot"},{interactions:o((()=>[e(ks,{profile:"user",command:!0},{default:o((()=>[Nn])),_:1})])),default:o((()=>[Dn,Rn,Sn])),_:1})])),_:1}),Yn,t("div",Pn,[Gn,t("p",null,[Un,e(ys,{path:"class/Guild"}),An])]),Bn,t("p",null,[$n,On,qn,e(ys,{path:"class/User"}),Ln,En,Mn,Fn,zn]),Hn,e(bs,null,{default:o((()=>[e(ms,{profile:"bot"},{interactions:o((()=>[e(ks,{profile:"user",command:!0},{default:o((()=>[Jn])),_:1})])),default:o((()=>[Kn,Qn,Vn])),_:1})])),_:1}),t("div",Wn,[Xn,t("p",null,[Zn,e(ys,{path:"class/User"}),ns])]),ss,t("ul",null,[as,t("li",null,[ts,t("a",es,[os,e(hs)]),ps]),cs,ls,is,us]),rs,ds,e(vs)],64)};export{i as default};
