import{r as n,o as s,c as a,a as t,b as e,w as p,F as o,d as c,f as i}from"./app.554c1b80.js";const l={},u=t("h1",{id:"frequently-asked-questions",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#frequently-asked-questions","aria-hidden":"true"},"#"),c(" Frequently asked Questions")],-1),r=t("h2",{id:"legend",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#legend","aria-hidden":"true"},"#"),c(" Legend")],-1),k=t("code",null,"client",-1),d=c(" is a placeholder for the "),m=c(" object, such as "),b=t("code",null,"const client = new Client({ intents: [Intents.FLAGS.GUILDS] });",-1),h=c("."),g=t("code",null,"interaction",-1),f=c(" is a placeholder for the "),v=c(" object, such as "),y=t("code",null,"client.on('interactionCreate', interaction => { ... });",-1),w=c("."),j=t("code",null,"guild",-1),x=c(" is a placeholder for the "),I=c(" object, such as "),M=t("code",null,"interaction.guild",-1),C=c(" or "),T=t("code",null,"client.guilds.cache.get('id')",-1),H=c("."),A=t("code",null,"voiceChannel",-1),P=c(" is a placeholder for the "),S=c(" object, such as "),_=t("code",null,"message.member.voice.channel",-1),U=c("For a more detailed explanation of the notations commonly used in this guide, the docs, and the support server, see "),R=c("here"),G=c("."),N=i('<h2 id="administrative" tabindex="-1"><a class="header-anchor" href="#administrative" aria-hidden="true">#</a> Administrative</h2><h3 id="how-do-i-ban-a-user" tabindex="-1"><a class="header-anchor" href="#how-do-i-ban-a-user" aria-hidden="true">#</a> How do I ban a user?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> user <span class="token operator">=</span> interaction<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nguild<span class="token punctuation">.</span>members<span class="token punctuation">.</span><span class="token function">ban</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="how-do-i-unban-a-user" tabindex="-1"><a class="header-anchor" href="#how-do-i-unban-a-user" aria-hidden="true">#</a> How do I unban a user?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> id <span class="token operator">=</span> interaction<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">)</span><span class="token operator">?.</span>value<span class="token punctuation">;</span>\nguild<span class="token punctuation">.</span>members<span class="token punctuation">.</span><span class="token function">unban</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',5),q={class:"custom-container tip"},L=t("p",{class:"custom-container-title"},"TIP",-1),O=c("Because you cannot ping a user who isn't in the server, you have to pass in the user id. To do this, we use a "),D=c(". See "),E=c("here"),W=c(" for more information on this topic."),Y=i('<h3 id="how-do-i-kick-a-user" tabindex="-1"><a class="header-anchor" href="#how-do-i-kick-a-user" aria-hidden="true">#</a> How do I kick a user?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> member <span class="token operator">=</span> interaction<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">getMember</span><span class="token punctuation">(</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmember<span class="token punctuation">.</span><span class="token function">kick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="how-do-i-add-a-role-to-a-guild-member" tabindex="-1"><a class="header-anchor" href="#how-do-i-add-a-role-to-a-guild-member" aria-hidden="true">#</a> How do I add a role to a guild member?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> role <span class="token operator">=</span> interaction<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">getRole</span><span class="token punctuation">(</span><span class="token string">&#39;role&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> member <span class="token operator">=</span> interaction<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">getMember</span><span class="token punctuation">(</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmember<span class="token punctuation">.</span>roles<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="how-do-i-check-if-a-guild-member-has-a-specific-role" tabindex="-1"><a class="header-anchor" href="#how-do-i-check-if-a-guild-member-has-a-specific-role" aria-hidden="true">#</a> How do I check if a guild member has a specific role?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> member <span class="token operator">=</span> interaction<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">getMember</span><span class="token punctuation">(</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>member<span class="token punctuation">.</span>roles<span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">role</span> <span class="token operator">=&gt;</span> role<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;role name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t<span class="token comment">// ...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="how-do-i-limit-a-command-to-a-single-user" tabindex="-1"><a class="header-anchor" href="#how-do-i-limit-a-command-to-a-single-user" aria-hidden="true">#</a> How do I limit a command to a single user?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>interaction<span class="token punctuation">.</span>user<span class="token punctuation">.</span>id <span class="token operator">===</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t<span class="token comment">// ...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="bot-configuration-and-utility" tabindex="-1"><a class="header-anchor" href="#bot-configuration-and-utility" aria-hidden="true">#</a> Bot Configuration and Utility</h2><h3 id="how-do-i-set-my-bot-s-username" tabindex="-1"><a class="header-anchor" href="#how-do-i-set-my-bot-s-username" aria-hidden="true">#</a> How do I set my bot&#39;s username?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>client<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="how-do-i-set-my-bot-s-avatar" tabindex="-1"><a class="header-anchor" href="#how-do-i-set-my-bot-s-avatar" aria-hidden="true">#</a> How do I set my bot&#39;s avatar?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>client<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">setAvatar</span><span class="token punctuation">(</span><span class="token string">&#39;URL or path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="how-do-i-set-my-playing-status" tabindex="-1"><a class="header-anchor" href="#how-do-i-set-my-playing-status" aria-hidden="true">#</a> How do I set my playing status?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>client<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">setActivity</span><span class="token punctuation">(</span><span class="token string">&#39;activity&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="how-do-i-set-my-status-to-watching-listening-to-competing-in" tabindex="-1"><a class="header-anchor" href="#how-do-i-set-my-status-to-watching-listening-to-competing-in" aria-hidden="true">#</a> How do I set my status to &quot;Watching/Listening to/Competing in ...&quot;?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>client<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">setActivity</span><span class="token punctuation">(</span><span class="token string">&#39;activity&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;WATCHING&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nclient<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">setActivity</span><span class="token punctuation">(</span><span class="token string">&#39;activity&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;LISTENING&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nclient<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">setActivity</span><span class="token punctuation">(</span><span class="token string">&#39;activity&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;COMPETING&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>If you would like to set your activity upon startup, you can use the <code>ClientOptions</code> object to set the appropriate <code>Presence</code> data.</p></div><h3 id="how-do-i-make-my-bot-display-online-idle-dnd-invisible" tabindex="-1"><a class="header-anchor" href="#how-do-i-make-my-bot-display-online-idle-dnd-invisible" aria-hidden="true">#</a> How do I make my bot display online/idle/dnd/invisible?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>client<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token string">&#39;online&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nclient<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token string">&#39;idle&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nclient<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token string">&#39;dnd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nclient<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token string">&#39;invisible&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="how-do-i-set-both-status-and-activity-in-one-go" tabindex="-1"><a class="header-anchor" href="#how-do-i-set-both-status-and-activity-in-one-go" aria-hidden="true">#</a> How do I set both status and activity in one go?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>client<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">setPresence</span><span class="token punctuation">(</span><span class="token punctuation">{</span> activities<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;activity&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> status<span class="token operator">:</span> <span class="token string">&#39;idle&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="miscellaneous" tabindex="-1"><a class="header-anchor" href="#miscellaneous" aria-hidden="true">#</a> Miscellaneous</h2><h3 id="how-do-i-send-a-message-to-a-specific-channel" tabindex="-1"><a class="header-anchor" href="#how-do-i-send-a-message-to-a-specific-channel" aria-hidden="true">#</a> How do I send a message to a specific channel?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> channel <span class="token operator">=</span> client<span class="token punctuation">.</span>channels<span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nchannel<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="how-do-i-dm-a-specific-user" tabindex="-1"><a class="header-anchor" href="#how-do-i-dm-a-specific-user" aria-hidden="true">#</a> How do I DM a specific user?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> user <span class="token operator">=</span> client<span class="token punctuation">.</span>users<span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nuser<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>If you want to DM the user who sent the interaction, you can use <code>interaction.user.send()</code>.</p></div><h3 id="how-do-i-mention-a-specific-user-in-a-message" tabindex="-1"><a class="header-anchor" href="#how-do-i-mention-a-specific-user-in-a-message" aria-hidden="true">#</a> How do I mention a specific user in a message?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> user <span class="token operator">=</span> interaction<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">await</span> interaction<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Hi, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>user<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">await</span> interaction<span class="token punctuation">.</span><span class="token function">followUp</span><span class="token punctuation">(</span><span class="token string">&#39;Hi, &lt;@user id&gt;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Mentions in embeds may resolve correctly in embed titles, descriptions and field values but will never notify the user. Other areas do not support mentions at all.</p></div><h3 id="how-do-i-control-which-users-and-or-roles-are-mentioned-in-a-message" tabindex="-1"><a class="header-anchor" href="#how-do-i-control-which-users-and-or-roles-are-mentioned-in-a-message" aria-hidden="true">#</a> How do I control which users and/or roles are mentioned in a message?</h3><p>Controlling which mentions will send a ping is done via the <code>allowedMentions</code> option, which replaces <code>disableMentions</code>.</p><p>This can be set as a default in <code>ClientOptions</code>, and controlled per-message sent by your bot.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Client</span><span class="token punctuation">(</span><span class="token punctuation">{</span> allowedMentions<span class="token operator">:</span> <span class="token punctuation">{</span> parse<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;roles&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Even more control can be achieved by listing specific <code>users</code> or <code>roles</code> to be mentioned by ID, e.g.:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>channel<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\tcontent<span class="token operator">:</span> <span class="token string">&#39;&lt;@123456789012345678&gt; &lt;@987654321098765432&gt; &lt;@&amp;102938475665748392&gt;&#39;</span><span class="token punctuation">,</span>\n\tallowedMentions<span class="token operator">:</span> <span class="token punctuation">{</span> users<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;123456789012345678&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> roles<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;102938475665748392&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="how-do-i-prompt-the-user-for-additional-input" tabindex="-1"><a class="header-anchor" href="#how-do-i-prompt-the-user-for-additional-input" aria-hidden="true">#</a> How do I prompt the user for additional input?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>interaction<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&#39;Please enter more input.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">const</span> <span class="token function-variable function">filter</span> <span class="token operator">=</span> <span class="token parameter">m</span> <span class="token operator">=&gt;</span> interaction<span class="token punctuation">.</span>user<span class="token punctuation">.</span>id <span class="token operator">===</span> m<span class="token punctuation">.</span>author<span class="token punctuation">.</span>id<span class="token punctuation">;</span>\n\n\tinteraction<span class="token punctuation">.</span>channel<span class="token punctuation">.</span><span class="token function">awaitMessages</span><span class="token punctuation">(</span><span class="token punctuation">{</span> filter<span class="token punctuation">,</span> time<span class="token operator">:</span> <span class="token number">60000</span><span class="token punctuation">,</span> max<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> errors<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;time&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\t\t<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">messages</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t\t\tinteraction<span class="token punctuation">.</span><span class="token function">followUp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">You&#39;ve entered: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>messages<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\t\t<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t\t\tinteraction<span class="token punctuation">.</span><span class="token function">followUp</span><span class="token punctuation">(</span><span class="token string">&#39;You did not enter any input!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>',39),$={class:"custom-container tip"},F=t("p",{class:"custom-container-title"},"TIP",-1),z=c("If you want to learn more about this syntax or other types of collectors, check out "),V=c("this dedicated guide page for collectors"),B=c("!"),Q=i('<h3 id="how-do-i-block-a-user-from-using-my-bot" tabindex="-1"><a class="header-anchor" href="#how-do-i-block-a-user-from-using-my-bot" aria-hidden="true">#</a> How do I block a user from using my bot?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> blockedUsers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;id1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;id2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\nclient<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;interactionCreate&#39;</span><span class="token punctuation">,</span> <span class="token parameter">interaction</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>blockedUsers<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>interaction<span class="token punctuation">.</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>You do not need to have a constant local variable like <code>blockedUsers</code> above. If you have a database system that you use to store IDs of blocked users, you can query the database instead:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;interactionCreate&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token parameter">interaction</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">const</span> blockedUsers <span class="token operator">=</span> <span class="token keyword">await</span> database<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&#39;SELECT user_id FROM blocked_users;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>blockedUsers<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>interaction<span class="token punctuation">.</span>user<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Note that this is just a showcase of how you could do such a check.</p></div><h3 id="how-do-i-react-to-the-message-my-bot-sent" tabindex="-1"><a class="header-anchor" href="#how-do-i-react-to-the-message-my-bot-sent" aria-hidden="true">#</a> How do I react to the message my bot sent?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>interaction<span class="token punctuation">.</span>channel<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;My message to react to.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">sentMessage</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t<span class="token comment">// Unicode emoji</span>\n\tsentMessage<span class="token punctuation">.</span><span class="token function">react</span><span class="token punctuation">(</span><span class="token string">&#39;👍&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token comment">// Custom emoji</span>\n\tsentMessage<span class="token punctuation">.</span><span class="token function">react</span><span class="token punctuation">(</span><span class="token string">&#39;123456789012345678&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\tsentMessage<span class="token punctuation">.</span><span class="token function">react</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;emoji:123456789012345678&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\tsentMessage<span class="token punctuation">.</span><span class="token function">react</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;a:emoji:123456789012345678&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\tsentMessage<span class="token punctuation">.</span><span class="token function">react</span><span class="token punctuation">(</span><span class="token string">&#39;emoji:123456789012345678&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\tsentMessage<span class="token punctuation">.</span><span class="token function">react</span><span class="token punctuation">(</span><span class="token string">&#39;a:emoji:123456789012345678&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>',5),J={class:"custom-container tip"},K=t("p",{class:"custom-container-title"},"TIP",-1),X=c("If you want to learn more about reactions, check out "),Z=c("this dedicated guide on reactions"),nn=c("!"),sn=i('<h3 id="how-do-i-restart-my-bot-with-a-command" tabindex="-1"><a class="header-anchor" href="#how-do-i-restart-my-bot-with-a-command" aria-hidden="true">#</a> How do I restart my bot with a command?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),an={class:"custom-container danger"},tn=t("p",{class:"custom-container-title"},"DANGER",-1),en=t("code",null,"process.exit()",-1),pn=c(" will only kill your Node process, but when using "),on={href:"http://pm2.keymetrics.io/",target:"_blank",rel:"noopener noreferrer"},cn=c("PM2"),ln=c(", it will restart the process whenever it gets killed. You can read our guide on PM2 "),un=c("here"),rn=c("."),kn=i('<h3 id="what-is-the-difference-between-a-user-and-a-guildmember" tabindex="-1"><a class="header-anchor" href="#what-is-the-difference-between-a-user-and-a-guildmember" aria-hidden="true">#</a> What is the difference between a User and a GuildMember?</h3><p>A User represents a global Discord user, and a GuildMember represents a Discord user on a specific server. That means only GuildMembers can have permissions, roles, and nicknames, for example, because all of these things are server-bound information that could be different on each server that the user is in.</p><h3 id="how-do-i-find-all-online-members-of-a-guild" tabindex="-1"><a class="header-anchor" href="#how-do-i-find-all-online-members-of-a-guild" aria-hidden="true">#</a> How do I find all online members of a guild?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// First use guild.members.fetch to make sure all members are cached</span>\nguild<span class="token punctuation">.</span>members<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">fetchedMembers</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">const</span> totalOnline <span class="token operator">=</span> fetchedMembers<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">member</span> <span class="token operator">=&gt;</span> member<span class="token punctuation">.</span>presence<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;online&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token comment">// Now you have a collection with all online member objects in the totalOnline variable</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">There are currently </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>totalOnline<span class="token punctuation">.</span>size<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> members online in this guild!</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',4),dn={class:"custom-container warning"},mn=t("p",{class:"custom-container-title"},"WARNING",-1),bn=c("This only works correctly if you have the "),hn=t("code",null,"GUILD_PRESENCES",-1),gn=c(" intent enabled for your application and client. If you want to learn more about intents, check out "),fn=c("this dedicated guide on intents"),vn=c("!"),yn=i('<h3 id="how-do-i-check-which-role-was-added-removed-and-for-which-member" tabindex="-1"><a class="header-anchor" href="#how-do-i-check-which-role-was-added-removed-and-for-which-member" aria-hidden="true">#</a> How do I check which role was added/removed and for which member?</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Start by declaring a guildMemberUpdate listener</span>\n<span class="token comment">// This code should be placed outside of any other listener callbacks to prevent listener nesting</span>\nclient<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;guildMemberUpdate&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">oldMember<span class="token punctuation">,</span> newMember</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t<span class="token comment">// If the role(s) are present on the old member object but no longer on the new one (i.e role(s) were removed)</span>\n\t<span class="token keyword">const</span> removedRoles <span class="token operator">=</span> oldMember<span class="token punctuation">.</span>roles<span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">role</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>newMember<span class="token punctuation">.</span>roles<span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>removedRoles<span class="token punctuation">.</span>size <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">The roles </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>removedRoles<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">r</span> <span class="token operator">=&gt;</span> r<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> were removed from </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>oldMember<span class="token punctuation">.</span>displayName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n\n\t<span class="token comment">// If the role(s) are present on the new member object but are not on the old one (i.e role(s) were added)</span>\n\t<span class="token keyword">const</span> addedRoles <span class="token operator">=</span> newMember<span class="token punctuation">.</span>roles<span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">role</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>oldMember<span class="token punctuation">.</span>roles<span class="token punctuation">.</span>cache<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token keyword">if</span> <span class="token punctuation">(</span>addedRoles<span class="token punctuation">.</span>size <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">The roles </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>addedRoles<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">r</span> <span class="token operator">=&gt;</span> r<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> were added to </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>oldMember<span class="token punctuation">.</span>displayName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="how-do-i-check-the-bot-s-ping" tabindex="-1"><a class="header-anchor" href="#how-do-i-check-the-bot-s-ping" aria-hidden="true">#</a> How do I check the bot&#39;s ping?</h3><p>There are two common measurements for bot pings. The first, <strong>websocket heartbeat</strong>, is the average interval of a regularly sent signal indicating the healthy operation of the websocket connection the library receives events over:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>interaction<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Websocket heartbeat: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>client<span class="token punctuation">.</span>ws<span class="token punctuation">.</span>ping<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',5),wn={class:"custom-container tip"},jn=t("p",{class:"custom-container-title"},"TIP",-1),xn=c("If you're using "),In=c("sharding"),Mn=c(", a specific shard's heartbeat can be found on the WebSocketShard instance, accessible at "),Cn=t("code",null,"client.ws.shards.ping",-1),Tn=c("."),Hn=i('<p>The second, <strong>Roundtrip Latency</strong>, describes the amount of time a full API roundtrip (from the creation of the command message to the creation of the response message) takes. You then edit the response to the respective value to avoid needing to send yet another message:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> sent <span class="token operator">=</span> <span class="token keyword">await</span> interaction<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token punctuation">{</span> content<span class="token operator">:</span> <span class="token string">&#39;Pinging...&#39;</span><span class="token punctuation">,</span> fetchReply<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ninteraction<span class="token punctuation">.</span><span class="token function">editReply</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Roundtrip latency: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>sent<span class="token punctuation">.</span>createdTimestamp <span class="token operator">-</span> interaction<span class="token punctuation">.</span>createdTimestamp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="how-do-i-play-music-from-youtube" tabindex="-1"><a class="header-anchor" href="#how-do-i-play-music-from-youtube" aria-hidden="true">#</a> How do I play music from YouTube?</h3><p>For this to work, you need to have <code>ytdl-core</code> and <code>@discordjs/voice</code> installed.</p>',4),An=t("div",{class:"language-bash ext-sh"},[t("pre",{class:"language-bash"},[t("code",null,[t("span",{class:"token function"},"npm"),c(),t("span",{class:"token function"},"install"),c(" ytdl-core @discordjs/voice\n")])])],-1),Pn=t("div",{class:"language-bash ext-sh"},[t("pre",{class:"language-bash"},[t("code",null,[t("span",{class:"token function"},"yarn"),c(),t("span",{class:"token function"},"add"),c(" ytdl-core @discordjs/voice\n")])])],-1),Sn=t("div",{class:"language-bash ext-sh"},[t("pre",{class:"language-bash"},[t("code",null,[t("span",{class:"token function"},"pnpm"),c(),t("span",{class:"token function"},"add"),c(" ytdl-core @discordjs/voice\n")])])],-1),_n=t("p",null,"Additionally, you may need the following:",-1),Un=t("div",{class:"language-bash ext-sh"},[t("pre",{class:"language-bash"},[t("code",null,[t("span",{class:"token function"},"npm"),c(),t("span",{class:"token function"},"install"),c(" --save @discordjs/opus "),t("span",{class:"token comment"},"# opus engine (if missing)"),c("\n"),t("span",{class:"token function"},"sudo"),c(),t("span",{class:"token function"},"apt-get"),c(),t("span",{class:"token function"},"install"),c(" ffmpeg "),t("span",{class:"token comment"},"# ffmpeg debian/ubuntu"),c("\n"),t("span",{class:"token function"},"npm"),c(),t("span",{class:"token function"},"install"),c(" ffmpeg-static "),t("span",{class:"token comment"},"# ffmpeg windows"),c("\n")])])],-1),Rn=t("div",{class:"language-bash ext-sh"},[t("pre",{class:"language-bash"},[t("code",null,[t("span",{class:"token function"},"yarn"),c(),t("span",{class:"token function"},"add"),c(" --save @discordjs/opus "),t("span",{class:"token comment"},"# opus engine (if missing)"),c("\n"),t("span",{class:"token function"},"sudo"),c(),t("span",{class:"token function"},"apt-get"),c(),t("span",{class:"token function"},"install"),c(" ffmpeg "),t("span",{class:"token comment"},"# ffmpeg debian/ubuntu"),c("\n"),t("span",{class:"token function"},"yarn"),c(),t("span",{class:"token function"},"add"),c(" ffmpeg-static "),t("span",{class:"token comment"},"# ffmpeg windows"),c("\n")])])],-1),Gn=t("div",{class:"language-bash ext-sh"},[t("pre",{class:"language-bash"},[t("code",null,[t("span",{class:"token function"},"pnpm"),c(),t("span",{class:"token function"},"add"),c(" --save @discordjs/opus "),t("span",{class:"token comment"},"# opus engine (if missing)"),c("\n"),t("span",{class:"token function"},"sudo"),c(),t("span",{class:"token function"},"apt-get"),c(),t("span",{class:"token function"},"install"),c(" ffmpeg "),t("span",{class:"token comment"},"# ffmpeg debian/ubuntu"),c("\n"),t("span",{class:"token function"},"pnpm"),c(),t("span",{class:"token function"},"add"),c(" ffmpeg-static "),t("span",{class:"token comment"},"# ffmpeg windows"),c("\n")])])],-1),Nn=i('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ytdl <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;ytdl-core&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n\tAudioPlayerStatus<span class="token punctuation">,</span>\n\tStreamType<span class="token punctuation">,</span>\n\tcreateAudioPlayer<span class="token punctuation">,</span>\n\tcreateAudioResource<span class="token punctuation">,</span>\n\tjoinVoiceChannel<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@discordjs/voice&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n\n<span class="token keyword">const</span> connection <span class="token operator">=</span> <span class="token function">joinVoiceChannel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\tchannelId<span class="token operator">:</span> voiceChannel<span class="token punctuation">.</span>id<span class="token punctuation">,</span>\n\tguildId<span class="token operator">:</span> guild<span class="token punctuation">.</span>id<span class="token punctuation">,</span>\n\tadapterCreator<span class="token operator">:</span> guild<span class="token punctuation">.</span>voiceAdapterCreator<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> stream <span class="token operator">=</span> <span class="token function">ytdl</span><span class="token punctuation">(</span><span class="token string">&#39;youtube link&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> filter<span class="token operator">:</span> <span class="token string">&#39;audioonly&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> resource <span class="token operator">=</span> <span class="token function">createAudioResource</span><span class="token punctuation">(</span>stream<span class="token punctuation">,</span> <span class="token punctuation">{</span> inputType<span class="token operator">:</span> StreamType<span class="token punctuation">.</span>Arbitrary <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> player <span class="token operator">=</span> <span class="token function">createAudioPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nplayer<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>\nconnection<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nplayer<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>AudioPlayerStatus<span class="token punctuation">.</span>Idle<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> connection<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>You can learn more about these methods in the <a href="/voice">voice section of this guide</a>!</p></div>',2),qn={class:"custom-container warning"},Ln=t("p",{class:"custom-container-title"},"WARNING",-1),On=c("This only works correctly if you have the "),Dn=t("code",null,"GUILD_VOICE_STATES",-1),En=c(" intent enabled for your application and client. If you want to learn more about intents, check out "),Wn=c("this dedicated guide on intents"),Yn=c("!"),$n=t("h3",{id:"why-do-some-emojis-behave-weirdly",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#why-do-some-emojis-behave-weirdly","aria-hidden":"true"},"#"),c(" Why do some emojis behave weirdly?")],-1),Fn=c("If you've tried using "),zn=c("the usual method of retrieving unicode emojis"),Vn=c(", you may have noticed that some characters don't provide the expected results. Here's a short snippet that'll help with that issue. You can toss this into a file of its own and use it anywhere you need! Alternatively feel free to simply copy-paste the characters from below:"),Bn=i('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// emojiCharacters.js</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n\ta<span class="token operator">:</span> <span class="token string">&#39;🇦&#39;</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token string">&#39;🇧&#39;</span><span class="token punctuation">,</span> c<span class="token operator">:</span> <span class="token string">&#39;🇨&#39;</span><span class="token punctuation">,</span> d<span class="token operator">:</span> <span class="token string">&#39;🇩&#39;</span><span class="token punctuation">,</span>\n\te<span class="token operator">:</span> <span class="token string">&#39;🇪&#39;</span><span class="token punctuation">,</span> f<span class="token operator">:</span> <span class="token string">&#39;🇫&#39;</span><span class="token punctuation">,</span> g<span class="token operator">:</span> <span class="token string">&#39;🇬&#39;</span><span class="token punctuation">,</span> h<span class="token operator">:</span> <span class="token string">&#39;🇭&#39;</span><span class="token punctuation">,</span>\n\ti<span class="token operator">:</span> <span class="token string">&#39;🇮&#39;</span><span class="token punctuation">,</span> j<span class="token operator">:</span> <span class="token string">&#39;🇯&#39;</span><span class="token punctuation">,</span> k<span class="token operator">:</span> <span class="token string">&#39;🇰&#39;</span><span class="token punctuation">,</span> l<span class="token operator">:</span> <span class="token string">&#39;🇱&#39;</span><span class="token punctuation">,</span>\n\tm<span class="token operator">:</span> <span class="token string">&#39;🇲&#39;</span><span class="token punctuation">,</span> n<span class="token operator">:</span> <span class="token string">&#39;🇳&#39;</span><span class="token punctuation">,</span> o<span class="token operator">:</span> <span class="token string">&#39;🇴&#39;</span><span class="token punctuation">,</span> p<span class="token operator">:</span> <span class="token string">&#39;🇵&#39;</span><span class="token punctuation">,</span>\n\tq<span class="token operator">:</span> <span class="token string">&#39;🇶&#39;</span><span class="token punctuation">,</span> r<span class="token operator">:</span> <span class="token string">&#39;🇷&#39;</span><span class="token punctuation">,</span> s<span class="token operator">:</span> <span class="token string">&#39;🇸&#39;</span><span class="token punctuation">,</span> t<span class="token operator">:</span> <span class="token string">&#39;🇹&#39;</span><span class="token punctuation">,</span>\n\tu<span class="token operator">:</span> <span class="token string">&#39;🇺&#39;</span><span class="token punctuation">,</span> v<span class="token operator">:</span> <span class="token string">&#39;🇻&#39;</span><span class="token punctuation">,</span> w<span class="token operator">:</span> <span class="token string">&#39;🇼&#39;</span><span class="token punctuation">,</span> x<span class="token operator">:</span> <span class="token string">&#39;🇽&#39;</span><span class="token punctuation">,</span>\n\ty<span class="token operator">:</span> <span class="token string">&#39;🇾&#39;</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token string">&#39;🇿&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token string">&#39;0️⃣&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token string">&#39;1️⃣&#39;</span><span class="token punctuation">,</span>\n\t<span class="token number">2</span><span class="token operator">:</span> <span class="token string">&#39;2️⃣&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">:</span> <span class="token string">&#39;3️⃣&#39;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token operator">:</span> <span class="token string">&#39;4️⃣&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token operator">:</span> <span class="token string">&#39;5️⃣&#39;</span><span class="token punctuation">,</span>\n\t<span class="token number">6</span><span class="token operator">:</span> <span class="token string">&#39;6️⃣&#39;</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token operator">:</span> <span class="token string">&#39;7️⃣&#39;</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token operator">:</span> <span class="token string">&#39;8️⃣&#39;</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token operator">:</span> <span class="token string">&#39;9️⃣&#39;</span><span class="token punctuation">,</span>\n\t<span class="token number">10</span><span class="token operator">:</span> <span class="token string">&#39;🔟&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#&#39;</span><span class="token operator">:</span> <span class="token string">&#39;#️⃣&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token operator">:</span> <span class="token string">&#39;*️⃣&#39;</span><span class="token punctuation">,</span>\n\t<span class="token string">&#39;!&#39;</span><span class="token operator">:</span> <span class="token string">&#39;❗&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;?&#39;</span><span class="token operator">:</span> <span class="token string">&#39;❓&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// index.js</span>\n<span class="token keyword">const</span> emojiCharacters <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./emojiCharacters.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>emojiCharacters<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 🇦</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>emojiCharacters<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 🔟</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>emojiCharacters<span class="token punctuation">[</span><span class="token string">&#39;!&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ❗</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>On Windows, you may be able to use the <code>Win + .</code> keyboard shortcut to open up an emoji picker that can be used for quick, easy access to all the Unicode emojis available to you. Some of the emojis listed above may not be represented there, though (e.g., the 0-9 emojis).</p><p>You can also use the <code>Control + Command + Space</code> keyboard shortcut to perform the same behavior on macOS.</p></div>',3);l.render=function(c,i){const l=n("DocsLink"),Qn=n("RouterLink"),Jn=n("OutboundLink"),Kn=n("CodeGroupItem"),Xn=n("CodeGroup");return s(),a(o,null,[u,r,t("ul",null,[t("li",null,[k,d,e(l,{path:"class/Client"}),m,b,h]),t("li",null,[g,f,e(l,{path:"class/Interaction"}),v,y,w]),t("li",null,[j,x,e(l,{path:"class/Guild"}),I,M,C,T,H]),t("li",null,[A,P,e(l,{path:"class/VoiceChannel"}),S,_])]),t("p",null,[U,e(Qn,{to:"/additional-info/notation.html"},{default:p((()=>[R])),_:1}),G]),N,t("div",q,[L,t("p",null,[O,e(l,{path:"typedef/CommandInteractionOption"}),D,e(Qn,{to:"/interactions/replying-to-slash-commands.html#parsing-options"},{default:p((()=>[E])),_:1}),W])]),Y,t("div",$,[F,t("p",null,[z,e(Qn,{to:"/popular-topics/collectors.html"},{default:p((()=>[V])),_:1}),B])]),Q,t("div",J,[K,t("p",null,[X,e(Qn,{to:"/popular-topics/reactions.html"},{default:p((()=>[Z])),_:1}),nn])]),sn,t("div",an,[tn,t("p",null,[en,pn,t("a",on,[cn,e(Jn)]),ln,e(Qn,{to:"/improving-dev-environment/pm2.html"},{default:p((()=>[un])),_:1}),rn])]),kn,t("div",dn,[mn,t("p",null,[bn,hn,gn,e(Qn,{to:"/popular-topics/intents.html"},{default:p((()=>[fn])),_:1}),vn])]),yn,t("div",wn,[jn,t("p",null,[xn,e(Qn,{to:"/sharding/"},{default:p((()=>[In])),_:1}),Mn,Cn,Tn])]),Hn,e(Xn,null,{default:p((()=>[e(Kn,{title:"npm"},{default:p((()=>[An])),_:1}),e(Kn,{title:"yarn"},{default:p((()=>[Pn])),_:1}),e(Kn,{title:"pnpm"},{default:p((()=>[Sn])),_:1})])),_:1}),_n,e(Xn,null,{default:p((()=>[e(Kn,{title:"npm"},{default:p((()=>[Un])),_:1}),e(Kn,{title:"yarn"},{default:p((()=>[Rn])),_:1}),e(Kn,{title:"pnpm"},{default:p((()=>[Gn])),_:1})])),_:1}),Nn,t("div",qn,[Ln,t("p",null,[On,Dn,En,e(Qn,{to:"/popular-topics/intents.html"},{default:p((()=>[Wn])),_:1}),Yn])]),$n,t("p",null,[Fn,e(Qn,{to:"/popular-topics/reactions.html#unicode-emojis"},{default:p((()=>[zn])),_:1}),Vn]),Bn],64)};export{l as default};
