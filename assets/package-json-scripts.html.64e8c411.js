import{r as n,o as s,c as a,b as t,w as e,a as o,F as p,d as l,f as r}from"./app.554c1b80.js";const c={},u=o("h1",{id:"setting-up-package-json-scripts",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#setting-up-package-json-scripts","aria-hidden":"true"},"#"),l(" Setting up package.json scripts")],-1),i=o("p",null,[l("An easy way to run scripts like a script to start your bot, a script to lint your bot's files, or whatever scripts you use is by storing them in your "),o("code",null,"package.json"),l(" file. After you store these scripts in your "),o("code",null,"package.json"),l(" file, you can run the "),o("code",null,"start"),l(" script to start your bot or the "),o("code",null,"lint"),l(" script to lint your code for errors.")],-1),d=o("div",{class:"language-bash ext-sh"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"npm"),l(" run start\n"),o("span",{class:"token function"},"npm"),l(" run lint\n")])])],-1),g=o("div",{class:"language-bash ext-sh"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"yarn"),l(" run start\n"),o("span",{class:"token function"},"yarn"),l(" run lint\n")])])],-1),k=o("div",{class:"language-bash ext-sh"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"pnpm"),l(" run start\n"),o("span",{class:"token function"},"pnpm"),l(" run lint\n")])])],-1),h=o("h2",{id:"getting-started",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#getting-started","aria-hidden":"true"},"#"),l(" Getting started")],-1),m={class:"custom-container tip"},b=o("p",{class:"custom-container-title"},"TIP",-1),f=o("p",null,[l("Before getting started, you'll need to have a "),o("code",null,"package.json"),l(" file. If you don't have a "),o("code",null,"package.json"),l(" file yet, you can run the following command in the console to generate one.")],-1),y=o("div",{class:"language-bash ext-sh"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"npm"),l(" init -y\n")])])],-1),q=o("div",{class:"language-bash ext-sh"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"yarn"),l(" init -y\n")])])],-1),v=o("div",{class:"language-bash ext-sh"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"pnpm"),l(" init -y\n")])])],-1),w=r('<p>If you haven&#39;t touched your <code>package.json</code> file yet (excluding installing dependencies), your <code>package.json</code> file should look similar to the following:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n\t<span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-bot&quot;</span><span class="token punctuation">,</span>\n\t<span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>\n\t<span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;A Discord bot!&quot;</span><span class="token punctuation">,</span>\n\t<span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>\n\t<span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n\t\t<span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\t<span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n\t<span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ISC&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>Let&#39;s zoom in more. Below <code>main</code>, you&#39;ll see <code>scripts</code>. You can specify your scripts there. In this guide, we&#39;ll show how to start and lint your bot using a <code>package.json</code> script.</p><h2 id="adding-your-first-script" tabindex="-1"><a class="header-anchor" href="#adding-your-first-script" aria-hidden="true">#</a> Adding your first script</h2>',4),x={class:"custom-container tip"},j=o("p",{class:"custom-container-title"},"TIP",-1),_=l("We'll assume you have finished the "),I=l("creating your first bot"),A=l(" section of the guide. If you haven't, ensure to follow it first!"),L=r('<p>Over at your <code>package.json</code> file, add the following line to the <code>scripts</code>:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node .&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>The <code>node .</code> script will run the file you have specified at the <code>main</code> entry in your <code>package.json</code> file. If you don&#39;t have it set yet, make sure to select your bot&#39;s main file as <code>main</code>!</p></div><p>Now, whenever you run the <code>start</code> script in your bot&#39;s directory, it will run the <code>node .</code> command.</p>',4),P=o("div",{class:"language-bash ext-sh"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"npm"),l(" run start\n")])])],-1),S=o("div",{class:"language-bash ext-sh"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"yarn"),l(" run start\n")])])],-1),T=o("div",{class:"language-bash ext-sh"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"pnpm"),l(" run start\n")])])],-1),C=o("p",null,"Let's create another script to lint your code via the command line.",-1),E={class:"custom-container tip"},G=o("p",{class:"custom-container-title"},"TIP",-1),Y=l("If you do not have ESLint installed globally, you can use "),B={href:"https://alligator.io/workflow/npx/",target:"_blank",rel:"noopener noreferrer"},D=l("npx"),F=l(" to run the ESLint script for your local directory. For more info on how to set it up, you can read the site "),N={href:"https://alligator.io/workflow/npx/",target:"_blank",rel:"noopener noreferrer"},O=l("here"),z=l("."),R=r('<p>Add the following line to your scripts:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;lint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eslint .&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Now, whenever you run the <code>lint</code> script, ESLint will lint your <code>index.js</code> file.</p>',3),W=o("div",{class:"language-bash ext-sh"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"npm"),l(" run lint\n")])])],-1),H=o("div",{class:"language-bash ext-sh"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"yarn"),l(" run lint\n")])])],-1),J=o("div",{class:"language-bash ext-sh"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"pnpm"),l(" run lint\n")])])],-1),K=r('<p>Your <code>package.json</code> file should now look similar to the following:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n\t<span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-bot&quot;</span><span class="token punctuation">,</span>\n\t<span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>\n\t<span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;A Discord bot!&quot;</span><span class="token punctuation">,</span>\n\t<span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>\n\t<span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n\t\t<span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span><span class="token punctuation">,</span>\n\t\t<span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node .&quot;</span><span class="token punctuation">,</span>\n\t\t<span class="token property">&quot;lint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eslint .&quot;</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\t<span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n\t<span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ISC&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>And that&#39;s it! You can always add more scripts now, running them with:</p>',3),M=o("div",{class:"language-bash ext-sh"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"npm"),l(" run "),o("span",{class:"token operator"},"<"),l("script-name"),o("span",{class:"token operator"},">"),l("\n")])])],-1),Q=o("div",{class:"language-bash ext-sh"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"yarn"),l(" run "),o("span",{class:"token operator"},"<"),l("script-name"),o("span",{class:"token operator"},">"),l("\n")])])],-1),U=o("div",{class:"language-bash ext-sh"},[o("pre",{class:"language-bash"},[o("code",null,[o("span",{class:"token function"},"pnpm"),l(" run "),o("span",{class:"token operator"},"<"),l("script-name"),o("span",{class:"token operator"},">"),l("\n")])])],-1),V={class:"custom-container tip"},X=o("p",{class:"custom-container-title"},"TIP",-1),Z=l("Package scripts allow some more configuration (like pre-, post- and lifecycle scripts) than we can cover in this guide. Check out the official documentation on "),$={href:"https://docs.npmjs.com/cli/v7/using-npm/scripts",target:"_blank",rel:"noopener noreferrer"},nn=l("docs.npmjs.com"),sn=l(" for more information.");c.render=function(l,r){const c=n("CodeGroupItem"),an=n("CodeGroup"),tn=n("RouterLink"),en=n("OutboundLink");return s(),a(p,null,[u,i,t(an,null,{default:e((()=>[t(c,{title:"npm"},{default:e((()=>[d])),_:1}),t(c,{title:"yarn"},{default:e((()=>[g])),_:1}),t(c,{title:"pnpm"},{default:e((()=>[k])),_:1})])),_:1}),h,o("div",m,[b,f,t(an,null,{default:e((()=>[t(c,{title:"npm"},{default:e((()=>[y])),_:1}),t(c,{title:"yarn"},{default:e((()=>[q])),_:1}),t(c,{title:"pnpm"},{default:e((()=>[v])),_:1})])),_:1})]),w,o("div",x,[j,o("p",null,[_,t(tn,{to:"/creating-your-bot/"},{default:e((()=>[I])),_:1}),A])]),L,t(an,null,{default:e((()=>[t(c,{title:"npm"},{default:e((()=>[P])),_:1}),t(c,{title:"yarn"},{default:e((()=>[S])),_:1}),t(c,{title:"pnpm"},{default:e((()=>[T])),_:1})])),_:1}),C,o("div",E,[G,o("p",null,[Y,o("a",B,[D,t(en)]),F,o("a",N,[O,t(en)]),z])]),R,t(an,null,{default:e((()=>[t(c,{title:"npm"},{default:e((()=>[W])),_:1}),t(c,{title:"yarn"},{default:e((()=>[H])),_:1}),t(c,{title:"pnpm"},{default:e((()=>[J])),_:1})])),_:1}),K,t(an,null,{default:e((()=>[t(c,{title:"npm"},{default:e((()=>[M])),_:1}),t(c,{title:"yarn"},{default:e((()=>[Q])),_:1}),t(c,{title:"pnpm"},{default:e((()=>[U])),_:1})])),_:1}),o("div",V,[X,o("p",null,[Z,o("a",$,[nn,t(en)]),sn])])],64)};export{c as default};
